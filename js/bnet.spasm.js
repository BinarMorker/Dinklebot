var Spasm=Spasm||{};Spasm.Deg2Rad=Math.PI/180;Spasm.Rad2Deg=180/Math.PI;var Spasm=Spasm||{};Spasm.Animation=function(a,b){Spasm.assertPath(a);Spasm.assertFunction(b);this.animationPath=a;this.callback=b;this.loadComplete=false;this.loadSuccess=false;var d=this,c=function(a){d.onLoadAnimation(a)};this.animation=null;this.animationLoader=new Spasm.JSONLoader(a,c);this.frameCount=0;this.nodeCount=0;this.framesMatrices=null;this.animationMatrices=null;this.tempMatrix0=mat4.create()};Spasm.Animation.prototype={};Spasm.Animation.prototype.frameFillTransformBuffer=function(b,g,d,o){Spasm.assertNumber(b);Spasm.assertInstance(g,Float32Array);Spasm.assertArrayInstances(d,Float32Array);b=Math.floor(b);var p=this.framesMatrices,i=this.animationMatrices,c=this.tempMatrix0,r=this.frameCount,h=this.nodeCount,k=d.length,n=g.length;Spasm.assert(b>=0);Spasm.assert(b<r);Spasm.assert(n===h*12);Spasm.assertEqual(h,k);for(var q=p[b],a=0;a<h;a++){var j=q[a],e=i[a],l=d[a],f=o[a];if(f>=0){Spasm.assert(f<a);var m=i[f];mat4.multiply(e,m,j)}else
mat4.copy(e,j);mat4.multiply(c,e,l);mat4.transpose(c,c);g.set(c.subarray(0,12),a*12)}};Spasm.Animation.prototype.onLoadAnimationSuccess=function(i){Spasm.assertArray(i);this.loadSuccess=true;var M=i.length;Spasm.assert(M>0);for(var d=i[0],h=d.node_count,s=d.frame_count,c=d.static_bone_data,D=c.scale_control_map,z=c.rotation_control_map,w=c.translation_control_map,f=c.transform_stream_header.streams.frames[0],N=f.scales,K=f.rotations,G=f.translations,b=d.animated_bone_data,A=b.scale_control_map,x=b.rotation_control_map,v=b.translation_control_map,B=b.transform_stream_header.streams.frames,p=[],g=0;g<s;g++){for(var q=[],e=B[g],L=e.scales,H=e.rotations,E=e.translations,a=0;a<h;a++){var o=D.indexOf(a),l=z.indexOf(a),j=w.indexOf(a),F=A.indexOf(a),C=x.indexOf(a),y=v.indexOf(a),u=o>=0?N[o]:L[F],t=l>=0?K[l]:H[C],r=j>=0?G[j]:E[y];Spasm.assertValid(u);Spasm.assertValid(t);Spasm.assertValid(r);var I=new Spasm.TransformSRT(u,t,r),k=mat4.create();I.setMatrix(k);q.push(k)}
p.push(q)}
this.nodeCount=h;this.frameCount=s;this.framesMatrices=p;for(var n=[],m=0;m<h;m++){var J=mat4.create();n.push(J)}
this.animationMatrices=n;if(this.callback){this.callback(this,true);this.callback=null}};Spasm.Animation.prototype.onLoadAnimationFailure=function(){this.loadSuccess=false;if(this.callback){this.callback(this,false);this.callback=null}};Spasm.Animation.prototype.onLoadAnimation=function(a){Spasm.assertInstance(a,Spasm.JSONLoader);this.loadComplete=true;if(a.isCompleteAndOK()){var b=a.parsedResponse;this.onLoadAnimationSuccess(b)}else
this.onLoadAnimationFailure()};var Spasm=Spasm||{};Spasm.assert=function(b,c){if(!b){var a=new Error;false&&a.stack&&console.log(a.stack);throw c||"assertion failed";}};Spasm.assertFalse=function(a,b){Spasm.assert(!a,b)};Spasm.assertDefined=function(b,a){Spasm.assert(typeof b!=="undefined",a)};Spasm.assertNotNull=function(b,a){Spasm.assert(b!==null,a)};Spasm.assertValid=function(b,a){Spasm.assertDefined(b,a);Spasm.assertNotNull(b,a)};Spasm.assertEqual=function(b,c,a){Spasm.assert(b===c,a)};Spasm.assertType=function(c,a,b){Spasm.assert(typeof c===a,b)};Spasm.isArray=function(a){return Object.prototype.toString.call(a)==="[object Array]"};Spasm.assertInstance=function(b,c,a){Spasm.assertValid(b,a);Spasm.assert(b instanceof c,a)};Spasm.assertArray=function(b,a){Spasm.assertValid(b,a);Spasm.assert(Object.prototype.toString.call(b)==="[object Array]",a)};Spasm.assertArrayBuffer=function(a,b){Spasm.assertInstance(a,ArrayBuffer,b)};Spasm.assertWebGLContext=function(b,a){if(window.gli)
Spasm.assertValid(b,a);else
Spasm.assertInstance(b,WebGLRenderingContext,a)};Spasm.assertCanvas=function(a,b){Spasm.assertValid(a,b);Spasm.assert(a.tagName==="CANVAS")};Spasm.assertDOMEvent=function(a){Spasm.assertValid(a)};Spasm.assertFunction=function(b,a){Spasm.assertValid(b,a);Spasm.assertType(b,"function",a)};Spasm.assertNumber=function(b,a){Spasm.assertValid(b,a);Spasm.assertType(b,"number",a)};Spasm.assertInteger=function(b,a){Spasm.assertNumber(b,a);Spasm.assert(b%1===0,a)};Spasm.assertBoolean=function(a,b){Spasm.assertValid(a,b);Spasm.assertType(a,"boolean",b)};Spasm.assertString=function(b,a){Spasm.assertValid(b,a);Spasm.assertType(b,"string",a)};Spasm.assertStringArray=function(a,c){Spasm.assertArray(a,c);for(var d=a.length,b=0;b<d;b++){var e=a[b];Spasm.assertString(e,c)}};Spasm.assertPath=function(b,a){Spasm.assertString(b,a)};Spasm.assertImage=function(b,a){Spasm.assertValid(b,a)};Spasm.assertShaderUniform=function(b,a){Spasm.assertInstance(b,WebGLUniformLocation,a)};Spasm.assertArrayInstances=function(a,f,c){Spasm.assertArray(a,c);for(var d=a.length,b=0;b<d;b++){var e=a[b];Spasm.assertInstance(e,f,c)}};Spasm.assertCollectionInstances=function(a,d,b){Spasm.assertValid(a,b);for(var e in a){var c=a[e];Spasm.assertInstance(c,d,b)}};Spasm.assert(true);Spasm.assertFalse(false);Spasm.assertValid({});Spasm.assertString("");Spasm.assertArray([]);Spasm.assertEqual(2,2);Spasm.assertInteger(1.2345678901234567e19);Spasm.assertNumber(0,"zero is a number");Spasm.assertBoolean(false,"false is a boolean");var Spasm=Spasm||{};Spasm.BoundingVolume=function(a,b,c){Spasm.assertArray(a);Spasm.assertArray(b);Spasm.assertArray(c);this.minX=Math.min.apply(Math,a);this.minY=Math.min.apply(Math,b);this.minZ=Math.min.apply(Math,c);this.maxX=Math.max.apply(Math,a);this.maxY=Math.max.apply(Math,b);this.maxZ=Math.max.apply(Math,c)};Spasm.boundingVolumeFromRenderMetadata=function(a){Spasm.assertValid(a);var f=a.min_x,g=a.min_y,h=a.min_z,c=a.max_x,d=a.max_y,e=a.max_z,b=new Spasm.BoundingVolume([f,c],[g,d],[h,e]);return b};Spasm.boundingVolumeFromBoundingVolumes=function(c){Spasm.assertArrayInstances(c,Spasm.BoundingVolume);for(var d=[],e=[],f=[],h=c.length,b=0;b<h;b++){var a=c[b];d.push(a.minX);d.push(a.maxX);e.push(a.minY);e.push(a.maxY);f.push(a.minZ);f.push(a.maxZ)}
var g=new Spasm.BoundingVolume(d,e,f);return g};Spasm.BoundingVolume.prototype={};Spasm.BoundingVolume.prototype.getMaxLength=function(){return Math.sqrt(Math.pow(this.maxX- this.minX,2)+ Math.pow(this.maxY- this.minY,2)+ Math.pow(this.maxZ- this.minZ,2))};Spasm.BoundingVolume.prototype.getCenterPoint=function(){var a=[0,0,0];a[0]=(this.minX+ this.maxX)/ 2;a[1]=(this.minY+ this.maxY)/ 2;a[2]=(this.minZ+ this.maxZ)/ 2;return a};var Spasm=Spasm||{};Spasm.Camera=function(a){Spasm.assertCanvas(a);this.canvas=a;this.canvasSize={width:a.width,height:a.height,aspectRatio:a.width/a.height};this.orientation={modelTranslationHorizontal:0,modelTranslationVertical:1,modelTranslationDepth:0,modelRotationHorizontal:0,modelRotationVertical:0,viewDistance:9,viewTranslationHorizontal:0,viewTranslationVertical:0};this.bounds={viewTranslationMinHorizontal:-2,viewTranslationMinVertical:-2,viewTranslationMaxHorizontal:2,viewTranslationMaxVertical:2,modelRotationMinVertical:-85*Spasm.Deg2Rad,modelRotationMaxVertical:85*Spasm.Deg2Rad,viewDistanceMin:.5,viewDistanceMax:20};this.dirtyFlags={modelTranslation:true,modelRotation:true,view:true,projection:true};this.projection={fieldOfView:15*Spasm.Deg2Rad,nearPlane:.1,farPlane:10};this.vectors={viewDirection:vec3.set(vec3.create(),1,0,0),viewPosition:vec3.set(vec3.create(),5,0,0),viewTarget:vec3.create(),viewUp:vec3.set(vec3.create(),0,0,1),viewTranslation:vec3.create(),modelTranslation:vec3.create(),modelRotationAxis:vec3.set(vec3.create(),1,0,0)};var b=Spasm.Shader.InputTypes,c=Spasm.Shader.ValueTypes;this.matrices={identity:mat4.create(),identity34:mat4.create().subarray(0,12),cameraRotation:mat4.create(),modelTranslation:mat4.create(),modelRotation:mat4.create(),model:mat4.create(),view:mat4.create(),projection:mat4.create()};this.uniforms={modelMatrix:new Spasm.ShaderInput(b.uniform,c.mat4,"u_model_matrix"),viewMatrix:new Spasm.ShaderInput(b.uniform,c.mat4,"u_view_matrix"),projectionMatrix:new Spasm.ShaderInput(b.uniform,c.mat4,"u_projection_matrix")};this.uniformDatas={modelMatrix:new Spasm.UniformData(this.uniforms.modelMatrix,this.matrices.model),viewMatrix:new Spasm.UniformData(this.uniforms.viewMatrix,this.matrices.view),projectionMatrix:new Spasm.UniformData(this.uniforms.projectionMatrix,this.matrices.projection)}};Spasm.Camera.prototype={};Spasm.Camera.prototype.updateCanvasSize=function(){var d=this.canvas,a=this.canvasSize,c=Math.abs(d.width),b=Math.abs(d.height);if(c!==a.width||b!==a.height){a.width=c;a.height=b;a.aspectRatio=c/b;this.dirtyFlags.projection=true}};Spasm.Camera.prototype.updateMatrices=function(){var b=this.orientation,c=this.dirtyFlags,h=this.projection,o=this.canvasSize,d=this.vectors,a=this.matrices;this.updateCanvasSize();if(c.projection){mat4.perspective(a.projection,h.fieldOfView,o.aspectRatio,h.nearPlane,h.farPlane);c.projection=false}
var g=false;if(c.modelTranslation){vec3.set(d.modelTranslation,b.modelTranslationDepth,b.modelTranslationHorizontal,-b.modelTranslationVertical);mat4.translate(a.modelTranslation,a.identity,d.modelTranslation);g=true;c.modelTranslation=false}
if(c.modelRotation){var e=a.modelRotation;mat4.identity(e);mat4.rotateY(e,e,b.modelRotationVertical);mat4.rotateZ(e,e,b.modelRotationHorizontal);g=true;c.modelRotation=false}
g&&mat4.multiply(a.model,a.modelRotation,a.modelTranslation);if(c.view){var m=d.viewDirection,f=d.viewPosition,j=d.viewTarget,p=d.viewUp,i=d.viewTranslation,n=b.viewDistance;vec3.scale(f,m,n);vec3.add(f,f,j);mat4.lookAt(a.view,f,j,p);var k=b.viewTranslationHorizontal,l=b.viewTranslationVertical;vec3.set(i,k,-l,0);mat4.translate(a.view,a.view,i);c.zoom=false}};Spasm.Camera.prototype.updateForBoundingVolume=function(c,g){Spasm.assertInstance(c,Spasm.BoundingVolume);Spasm.assertBoolean(g);var j=c.getMaxLength(),d=c.getCenterPoint(),l=d[0],m=d[1],k=d[2],a=this.orientation;a.modelTranslationHorizontal=-m;a.modelTranslationVertical=k*.9;if(g){var e=Math.min(Math.max(j*4.5,4),90),i=e/(3*4);a.viewDistance=e;a.viewTranslationHorizontal=i;a.modelTranslationDepth=-l;a.modelRotationHorizontal=-60*Spasm.Deg2Rad;a.modelRotationVertical=15*Spasm.Deg2Rad}else{a.modelTranslationDepth=0;a.viewTranslationVertical=-.07;a.viewTranslationHorizontal=0;a.modelRotationHorizontal=10*Spasm.Deg2Rad;a.modelRotationVertical=0;a.viewDistance=7.8}
var h=this.bounds;h.viewDistanceMin=a.viewDistance*.5;h.viewDistanceMax=a.viewDistance*2;var f=this.projection;f.farPlane=a.viewDistance*3;f.nearPlane=a.viewDistance*.1;var b=this.dirtyFlags;b.modelTranslation=true;b.modelRotation=true;b.view=true;b.projection=true};Spasm.Camera.prototype.bound=function(c,b,a){Spasm.assertNumber(c);Spasm.assertNumber(b);Spasm.assertNumber(a);Spasm.assert(b<=a);var d=Math.max(Math.min(c,a),b);return d};Spasm.Camera.prototype.userRotate=function(c,d){Spasm.assertNumber(c);Spasm.assertNumber(d);var a=this.orientation,b=this.bounds,e=this.dirtyFlags;a.modelRotationHorizontal+=c*.01;a.modelRotationVertical+=d*.01;a.modelRotationVertical=this.bound(a.modelRotationVertical,b.modelRotationMinVertical,b.modelRotationMaxVertical);e.modelRotation=true};Spasm.Camera.prototype.userTranslate=function(diffX,diffY){Spasm.assertNumber(diffX);Spasm.assertNumber(diffY);var orientation=this.orientation,bounds=this.bounds,dirtyFlags=this.dirtyFlags;orientation.viewTranslationHorizontal+=diffX*.005;orientation.viewTranslationVertical+=diffY*.005;orientation.viewTranslationHorizontal=this.bound(orientation.viewTranslationHorizontal,bounds.viewTranslationMinHorizontal,bounds.viewTranslationMaxHorizontal);orientation.viewTranslationVertical=this.bound(orientation.viewTranslationVertical,bounds.viewTranslationMinVertical,bounds.viewTranslationMaxVertical);dirtyFlags.modelTranslation=true};Spasm.Camera.prototype.userZoom=function(c){Spasm.assertNumber(c);var a=this.orientation,b=this.bounds,d=this.dirtyFlags;a.viewDistance+=c*-.001;a.viewDistance=this.bound(a.viewDistance,b.viewDistanceMin,b.viewDistanceMax);d.view=true};Spasm.Camera.prototype.setAspectRatio=function(b,a){Spasm.assertNumber(b);Spasm.assertNumber(a);this.projection.aspectRatio=b/a;this.dirtyFlags.projection=true};var Spasm=Spasm||{};Spasm.CameraControls=function(b,c){Spasm.assertValid(b,"invalid element");Spasm.assertInstance(c,Spasm.Camera);this.element=b;this.camera=c;this.allowRotationHorizontal=true;this.allowRotationVertical=false;this.allowTranslation=false;this.allowZoom=false;this.mouse={tracking:false,oldX:0,oldY:0};this.touch={tracking:false,count:0,oldX:0,oldY:0};this.staticElementEventNames=["mousedown","touchstart","mousewheel","DOMMouseScroll"];this.staticWindowEventNames=["mouseup","touchend","touchcancel"];var a=this;this.eventListenerFunctions={mousedown:function(b){a.onMouseDown(b)},mousemove:function(b){a.onMouseMove(b)},mouseup:function(b){a.onMouseUp(b)},mouseout:function(b){a.onMouseOut(b)},mousewheel:function(b){a.onScroll(b)},DOMMouseScroll:function(b){a.onScroll(b)},touchstart:function(b){a.onTouchStart(b)},touchmove:function(b){a.onTouchMove(b)},touchend:function(b){a.onTouchEnd(b)},touchenter:function(b){a.onTouchEnter(b)},touchleave:function(b){a.onTouchLeave(b)},touchcancel:function(b){a.onTouchCancel(b)}};this.addStaticElementEventListeners();this.addStaticWindowEventListeners()};Spasm.CameraControls.prototype={};Spasm.CameraControls.prototype.addStaticElementEventListeners=function(){for(var g=this.element,f=this.eventListenerFunctions,b=this.staticElementEventNames,e=b.length,a=0;a<e;a++){var c=b[a],d=f[c];g.addEventListener(c,d,false)}};Spasm.CameraControls.prototype.addStaticWindowEventListeners=function(){for(var e=this.eventListenerFunctions,b=this.staticWindowEventNames,f=b.length,a=0;a<f;a++){var c=b[a],d=e[c];window.addEventListener(c,d,false)}};Spasm.CameraControls.prototype.onMouseDown=function(a){Spasm.assertDOMEvent(a);var b=this.mouse;b.tracking=true;b.oldX=a.clientX;b.oldY=a.clientY;a.preventDefault();window.addEventListener("mousemove",this.eventListenerFunctions.mousemove,false)};Spasm.CameraControls.prototype.onMouseMove=function(a){Spasm.assertDOMEvent(a);var b=this.mouse,g=this.camera;if(b.tracking){var newX=a.clientX,newY=a.clientY,oldX=b.oldX,oldY=b.oldY,diffX=newX- oldX,diffY=newY- oldY;if(a.shiftKey&&this.allowTranslation)
g.userTranslate(diffX,diffY);else
this.rotate(diffX,diffY);b.oldX=newX;b.oldY=newY;a.preventDefault()}};Spasm.CameraControls.prototype.onMouseUp=function(a){Spasm.assertDOMEvent(a);this.mouse.tracking=false;window.removeEventListener("mousemove",this.eventListenerFunctions.mousemove,false)};Spasm.CameraControls.prototype.onMouseOut=function(a){Spasm.assertDOMEvent(a)};Spasm.CameraControls.prototype.onScroll=function(a){Spasm.assertDOMEvent(a);if(this.allowZoom){var b=0;if(a.wheelDelta)
b=a.wheelDelta;else if(a.detail)
b=a.detail*-40;var c=this.camera;c.userZoom(b);a.preventDefault()}};Spasm.CameraControls.prototype.onTouchStart=function(d){Spasm.assertDOMEvent(d);var a=d.touches;if(a&&a.length===1){var c=a[0],e=c.clientX,f=c.clientY,b=this.touch;b.tracking=true;b.oldX=e;b.oldY=f;window.addEventListener("touchmove",this.eventListenerFunctions.touchmove,false)}};Spasm.CameraControls.prototype.onTouchMove=function(c){Spasm.assertDOMEvent(c);var a=this.touch,b=c.touches;if(a.tracking&&b&&b.length>0){var d=b[0],e=d.clientX,f=d.clientY,g=e- a.oldX,h=f- a.oldY;b.length===1&&this.rotate(g,h);a.oldX=e;a.oldY=f;c.preventDefault()}};Spasm.CameraControls.prototype.onTouchEnd=function(b){Spasm.assertDOMEvent(b);var a=b.touches;if(!a||a.length<=1){var c=this.touch;c.tracking=false;window.removeEventListener("touchmove",this.eventListenerFunctions.touchmove,false)}};Spasm.CameraControls.prototype.onTouchEnter=function(a){Spasm.assertDOMEvent(a)};Spasm.CameraControls.prototype.onTouchLeave=function(a){Spasm.assertDOMEvent(a)};Spasm.CameraControls.prototype.onTouchCancel=function(b){Spasm.assertDOMEvent(b);var a=b.touches;if(!a||a.length<=1){var c=this.touch;c.tracking=false;window.removeEventListener("touchmove",this.eventListenerFunctions.touchmove,false)}};Spasm.CameraControls.prototype.rotate=function(a,b){Spasm.assertNumber(a);Spasm.assertNumber(b);if(this.allowRotationHorizontal||this.allowRotationVertical){var c=this.allowRotationHorizontal?a:0,d=this.allowRotationVertical?b:0;this.camera.userRotate(c,d)}};var Spasm=Spasm||{};Spasm.CameraPresets=function(a){this.buckets=a;this.inventoryPresets={}};Spasm.CameraPresets.prototype={};Spasm.CameraPresets.prototype.init=function(){this.setInventoryBuckets()};Spasm.CameraPresets.prototype.setInventoryBuckets=function(){for(var b in this.buckets){var a=this.buckets[b];if(bucketDefinition=a.definition){var c=bucketDefinition.bucketIdentifier;switch(c){case"BUCKET_PRIMARY_WEAPON":case"BUCKET_SPECIAL_WEAPON":case"BUCKET_HEAVY_WEAPON":case"BUCKET_HEAD":case"BUCKET_ARMS":case"BUCKET_CHEST":case"BUCKET_CLASS_ITEMS":case"BUCKET_LEGS":case"BUCKET_SHIP":this.setInventoryPresets(a)}}}};Spasm.CameraPresets.prototype.setInventoryPresets=function(h){for(var d=h.items,g=d.length,b=0;b<g;b++){var i=d[b],c=i.itemDefinition,f=c.summary.itemTypeName.toLowerCase(),e=c.summary.referenceId,a={};switch(f){case"hand cannon":a=this.presetWeaponSmall();break;case"auto rifle":case"pulse rifle":case"scout rifle":case"fusion rifle":case"shotgun":a=this.presetWeaponMedium();break;case"machine gun":case"sniper rifle":a=this.presetWeaponLarge();break;case"rocket launcher":a=this.presetWeaponRocket();break;case"head armor":a=this.presetHeadArmor();break;case"leg armor":a=this.presetLegArmor();break;case"titan mark  ":a=this.presetCloth();break;case"hunter cloak":a=this.presetHunterCloth();break;case"ship":a=this.presetShip();break;case"warlock bond":default:a=this.presetDefault()}
this.inventoryPresets[e]=a}};Spasm.CameraPresets.prototype.presetWeaponSmall=function(){var a={};a.modelVertical=.05;a.modelHorizontal=.2;a.cameraDistance=1.5;a.cameraRotateHorizontal=-90*Spasm.Deg2Rad;return a};Spasm.CameraPresets.prototype.presetWeaponMedium=function(){var a={};a.modelVertical=.05;a.modelHorizontal=0;a.cameraDistance=2.4;a.cameraRotateVertical=15*Spasm.Deg2Rad;a.cameraRotateHorizontal=-90*Spasm.Deg2Rad;return a};Spasm.CameraPresets.prototype.presetWeaponLarge=function(){var a={};a.modelVertical=.05;a.modelHorizontal=.4;a.cameraDistance=2.7;a.cameraRotateVertical=15*Spasm.Deg2Rad;a.cameraRotateHorizontal=-90*Spasm.Deg2Rad;return a};Spasm.CameraPresets.prototype.presetWeaponRocket=function(){var a={};a.modelVertical=.05;a.modelHorizontal=0;a.cameraDistance=3;a.cameraRotateVertical=15*Spasm.Deg2Rad;return a};Spasm.CameraPresets.prototype.presetHeadArmor=function(){var a=this.presetDefault();a.modelVertical=1.7;a.modelHorizontal=0;a.cameraDistance=1.2;return a};Spasm.CameraPresets.prototype.presetCloth=function(){var a=this.presetDefault();a.modelVertical=1;a.cameraDistance=2.1;return a};Spasm.CameraPresets.prototype.presetHunterCloth=function(){var a=this.presetDefault();a.modelVertical=1.2;a.cameraDistance=4.8;return a};Spasm.CameraPresets.prototype.presetLegArmor=function(){var a=this.presetDefault();a.modelVertical=.52;a.modelHorizontal=0;a.cameraDistance=6;return a};Spasm.CameraPresets.prototype.presetDefault=function(){var a={};a.modelVertical=1.3;a.modelHorizontal=0;a.cameraDistance=3;a.cameraRotateHorizontal=-25*Spasm.Deg2Rad;a.cameraRotateVertical=1.5*Spasm.Deg2Rad;return a};Spasm.CameraPresets.prototype.presetShip=function(){var a={};a.modelVertical=2.5;a.modelHorizontal=0;a.cameraDistance=35;a.cameraRotateHorizontal=-25*Spasm.Deg2Rad;a.cameraRotateVertical=20*Spasm.Deg2Rad;return a};var Spasm=Spasm||{};Spasm.Content={};Spasm.Content.setContentBaseURL=function(a){Spasm.assertString(a);var b=a.split("?");a=b[0];Spasm.Content.SpasmPath=Spasm.Path.combine(a,"/scripts/bungienet/spasm/");Spasm.Content.RootPath=Spasm.Path.combine(a,"/common/destiny_content/geometry/");Spasm.Content.ContentPath=Spasm.Content.RootPath;Spasm.Content.StaticPath=Spasm.Path.combine(Spasm.Content.SpasmPath,"content/");Spasm.Content.AnimationsPath=Spasm.Content.StaticPath;Spasm.Content.TablesPath=Spasm.Content.StaticPath;Spasm.Content.GearDirectory="gear/";Spasm.Content.GearPath=Spasm.Path.combine(Spasm.Content.ContentPath,Spasm.Content.GearDirectory);Spasm.Content.PlatformDirectory="platform/";Spasm.Content.PlatformPath=Spasm.Path.combine(Spasm.Content.ContentPath,Spasm.Content.PlatformDirectory);Spasm.Content.WebDirectory="web/";Spasm.Content.WebPath=Spasm.Path.combine(Spasm.Content.PlatformPath,Spasm.Content.WebDirectory);Spasm.Content.GeometryDirectory="geometry/";Spasm.Content.GeometryPath=Spasm.Path.combine(Spasm.Content.WebPath,Spasm.Content.GeometryDirectory);Spasm.Content.TexturesDirectory="textures/";Spasm.Content.TexturesPath=Spasm.Path.combine(Spasm.Content.WebPath,Spasm.Content.TexturesDirectory);Spasm.Content.PlatedTexturesDirectory="plated_textures/";Spasm.Content.PlatedTexturesPath=Spasm.Path.combine(Spasm.Content.WebPath,Spasm.Content.PlatedTexturesDirectory)};var Spasm=Spasm||{};Spasm.Features=function(c){Spasm.assertCanvas(c);this.canvas=c;var a=null,e=null,b=null,i=Spasm.Features.supportsWebGL();if(i)
try{var f={antialias:true,preserveDrawingBuffer:true};a=c.getContext("webgl",f)||c.getContext("experimental-webgl",f);b=a.getParameter(a.VIEWPORT)}catch(k){e=k}
this.gl=a;this.glException=e;this.viewport=b;this.requiredShaderValueCountSupported=false;this.requiredExtensionsSupported=false;this.requiredFunctionsSupported=false;if(b)
for(var h=[],g=b.length,d=0;d<g;d++){var j=b[d];h.push(j)}
this.shaderSupport={vertex:{uniformVectors:0,attributes:0},fragment:{uniformVectors:0,varyingVectors:0,textureCount:0}};if(a){this.requiredShaderValueCountSupported=this.checkMaxShaderValues(a);this.checkContextAttributes(a);this.requiredExtensionsSupported=this.checkExtensions(a);this.requiredFunctionsSupported=this.checkRequiredFunctions()}};Spasm.Features.prototype={};Spasm.Features.prototype.floatingPointTextureExtensionName="OES_texture_float";Spasm.Features.prototype.requiredExtensions=[];Spasm.Features.prototype.optionalExtensions=[Spasm.Features.prototype.floatingPointTextureExtensionName,"WEBGL_lose_context","WEBKIT_WEBGL_lose_context","MOZ_WEBGL_lose_context"];Spasm.Features.prototype.requiredFunctions=["ArrayBuffer.prototype.slice"];Spasm.Features.prototype.checkRequiredFunctions=function(){var e=this.requiredFunctions;Spasm.assertStringArray(e);for(var c=true,i=e.length,d=0;d<i;d++){for(var j=e[d],g=j.split("."),h=g.length,a=window,b=0;b<h;b++){var f=g[b];if(a&&a[f])
a=a[f];else
break}
c=c&&typeof a==="function"}
return c};Spasm.Features.supportsWebGL=function(){return!!window.WebGLRenderingContext};Spasm.Features.prototype.supportsFloatingPointTextures=function(){return this.floatingPointTextureExtensionStatus};Spasm.Features.prototype.canRender=function(){var a=this.gl,b=Spasm.Features.supportsWebGL()&&a&&this.requiredShaderValueCountSupported&&this.requiredExtensionsSupported&&this.requiredFunctionsSupported&&!a.isContextLost();return b};Spasm.Features.prototype.checkMaxShaderValues=function(a){Spasm.assertWebGLContext(a);var b=true,e=a.getParameter(a.MAX_VERTEX_UNIFORM_VECTORS),g=a.getParameter(a.MAX_VERTEX_ATTRIBS);this.shaderSupport.vertex.uniformVectors=e;this.shaderSupport.vertex.attributes=g;var j=250;if(e<j){console.log("insufficient vertex shader uniform vector count (require "+ j+", have "+ e+")");b=false}
var l=3+ 2+ 1+ 2;if(g<l){console.log("insufficient vertex shader attribute count (require "+ l+", have "+ g+")");b=false}
var c=a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS),d=a.getParameter(a.MAX_VARYING_VECTORS),f=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS);this.shaderSupport.fragment.uniformVectors=c;this.shaderSupport.fragment.varyingVectors=d;this.shaderSupport.fragment.textureCount=f;var h=2;if(c<h){console.log("insufficient fragment shader uniform vector count (require "+ h+", have "+ c+")");b=false}
var i=2+ 2+ 1;if(d<i){console.log("insufficient fragment shader varying vector count (require "+ i+", have "+ d+")");b=false}
var k=3+ 2+ 1;if(f<k){console.log("insufficient fragment shader texture count (require "+ k+", have "+ f+")");b=false}
return b};Spasm.Features.prototype.checkContextAttributes=function(a){Spasm.assertWebGLContext(a);var b=a.getContextAttributes();Spasm.assertValid(b,"invalid context attributes")};Spasm.Features.prototype.checkExtensions=function(b){Spasm.assertWebGLContext(b);var a=b.getSupportedExtensions(),e=this.requiredExtensions,d=this.optionalExtensions,c=this.extensionStatus(e,a);this.optionalExtensionStatus=this.extensionStatus(d,a);this.floatingPointTextureExtensionStatus=a.indexOf(this.floatingPointTextureExtensionName);return c};Spasm.Features.prototype.extensionStatus=function(b,c){Spasm.assertStringArray(b);Spasm.assertStringArray(c);for(var d={},g=b.length,a=0;a<g;a++){var e=b[a],f=c.indexOf(e);d[e]=f>=0}
return d};var Spasm=Spasm||{};Spasm.GearDye=function(a,b){Spasm.assertValid(a);Spasm.assertCollectionInstances(b,Spasm.Texture);this.dye=a;this.textures=b;this.identifier=a.identifier;this.blendMode=a.blend_mode;this.slotTypeIndex=a.slot_type_index;this.materialProperties={primaryColor:a.material_properties.primary_color,secondaryColor:a.material_properties.secondary_color,detailTransform:a.material_properties.detail_transform,detailNormalContributionStrength:a.material_properties.detail_normal_contribution_strength,decalAlphaMapTransform:a.material_properties.decal_alpha_map_transform,decalBlendOption:a.material_properties.decal_blend_option,specularProperties:a.material_properties.specular_properties,subsurfaceScatteringStrength:a.material_properties.subsurface_scattering_strength};this.uniformDatas=this.getUniformDatas()};Spasm.GearDye.prototype={};Spasm.GearDye.prototype.bindTextures=function(){for(var c=this.textures,b=Object.keys(c),d=b.length,a=0;a<d;a++){var e=b[a],f=c[e];f.bindTexture()}};Spasm.GearDye.prototype.getUniformDatas=function(){var a=Spasm.Shader.InputTypes,b=Spasm.Shader.ValueTypes,w=new Spasm.ShaderInput(a.uniform,b.int,"u_blend_mode"),c=new Spasm.ShaderInput(a.uniform,b.vec4,"u_change_color"),i=new Spasm.ShaderInput(a.uniform,b.vec4,"u_decal_alpha_map_transform"),r=new Spasm.ShaderInput(a.uniform,b.int,"u_decal_blend_option"),e=new Spasm.ShaderInput(a.uniform,b.vec4,"u_detail_normal_contribution_strength"),t=new Spasm.ShaderInput(a.uniform,b.vec4,"u_detail_transform"),p=new Spasm.ShaderInput(a.uniform,b.vec4,"u_specular_properties"),g=new Spasm.ShaderInput(a.uniform,b.vec4,"u_subsurface_scattering_strength"),v=new Spasm.UniformData(w,this.blendMode.value),h=new Spasm.UniformData(i,this.materialProperties.decalAlphaMapTransform),l=new Spasm.UniformData(r,this.materialProperties.decalBlendOption),d=new Spasm.UniformData(e,this.materialProperties.detailNormalContributionStrength),n=new Spasm.UniformData(t,this.materialProperties.detailTransform),j=new Spasm.UniformData(p,this.materialProperties.specularProperties),f=new Spasm.UniformData(g,this.materialProperties.subsurfaceScatteringStrength),q=new Spasm.ShaderInput(a.uniform,b.sampler2D,"u_texture_dye_diffuse"),s=new Spasm.ShaderInput(a.uniform,b.sampler2D,"u_texture_dye_normal"),u=new Spasm.ShaderInput(a.uniform,b.sampler2D,"u_texture_dye_decal"),k=new Spasm.UniformData(q,3),m=new Spasm.UniformData(s,4),o=new Spasm.UniformData(u,5),x=[v,h,l,d,n,j,f,k,m,o];this.primaryColorUniformData=new Spasm.UniformData(c,this.materialProperties.primaryColor);this.secondaryColorUniformData=new Spasm.UniformData(c,this.materialProperties.secondaryColor);return x};var Spasm=Spasm||{};Spasm.ItemPreview=function(a,f){Spasm.assertCanvas(a);Spasm.assertString(f);var h=this;this.canvas=a;this.contentBaseURL=f;Spasm.Content.setContentBaseURL(f);this.renderer=new Spasm.Renderer(a);this.gearShaders=this.renderer.canRender()?new Spasm.GearShader(this.renderer.gl):null;this.camera=new Spasm.Camera(a);this.cameraControls=new Spasm.CameraControls(a,this.camera);var n=Math.abs(a.width),l=Math.abs(a.height);this.canvasSize={width:n,height:l};this.shouldAnimate=false;this.isAnimating=false;this.assetLoaders=null;this.genderType=1;this.frameIndex=0;this.callback=null;this.gearRenderables=[];this.gearRenderablesByItemReferenceId={};this.boundingVolume=null;this.itemReferenceIds=[];this.focusedItemReferenceId=null;var j="destiny_player_skeleton.js",i="destiny_player_animation.js",k=Spasm.Path.combine(Spasm.Content.AnimationsPath,i),m=Spasm.Path.combine(Spasm.Content.AnimationsPath,j);this.animation=new Spasm.Animation(k,function(a,b){h.onLoadAnimation(a,b)});this.skeleton=new Spasm.Skeleton(m,function(a,b){h.onLoadSkeleton(a,b)});var c=Spasm.Shader.InputTypes,d=Spasm.Shader.ValueTypes,b=72,e=12;this.identityMatrices=new Float32Array(b*e);this.identityMatricesUniform=new Spasm.ShaderInput(c.uniform,d.vec4,"u_skinning_matrices",b);this.identityMatricesUniformData=new Spasm.UniformData(this.identityMatricesUniform,this.identityMatrices);for(var g=0;g<b;g++)
this.identityMatrices.set(this.camera.matrices.identity34,g*e);this.skinningMatrices=new Float32Array(b*e);this.skinningMatricesUniform=new Spasm.ShaderInput(c.uniform,d.vec4,"u_skinning_matrices",b);this.skinningMatricesUniformData=new Spasm.UniformData(this.skinningMatricesUniform,this.skinningMatrices);this.cameraPosition=new Float32Array([40,30,50]);this.cameraPositionUniform=new Spasm.ShaderInput(c.uniform,d.vec3,"u_camera_position");this.cameraPositionUniformData=new Spasm.UniformData(this.cameraPositionUniform,this.cameraPosition);this.lightPosition=new Float32Array([20,50,100]);this.lightPositionUniform=new Spasm.ShaderInput(c.uniform,d.vec3,"u_light_position");this.lightPositionUniformData=new Spasm.UniformData(this.lightPositionUniform,this.lightPosition);this.animationFrame=function(){h.animate()}};Spasm.ItemPreview.prototype={};Spasm.ItemPreview.prototype.onLoadAnimation=function(a,b){Spasm.assertInstance(a,Spasm.Animation);Spasm.assertBoolean(b)};Spasm.ItemPreview.prototype.onLoadSkeleton=function(a,b){Spasm.assertInstance(a,Spasm.Skeleton);Spasm.assertBoolean(b)};Spasm.ItemPreview.prototype.checkLoadComplete=function(){var a=Object.keys(this.assetLoaders);a.length===0&&this.skeleton.loadComplete&&this.animation.loadComplete&&this.onLoadComplete()};Spasm.ItemPreview.prototype.onLoadFailure=function(){this.onFinishedLoading(false)};Spasm.ItemPreview.prototype.setGenderType=function(a){Spasm.assertInteger(a);if(a!==this.genderType){this.genderType=a;this.gearRenderablesByItemReferenceId={}}};Spasm.ItemPreview.prototype.setFocusedItemReferenceId=function(a){if(a)
this.focusedItemReferenceId=a;else
this.focusedItemReferenceId=null};Spasm.ItemPreview.prototype.loadItems=function(){var r=this.gearShaders,f=this.itemReferenceIds,g=this.assetManifests,d=this,t=this.primaryWeaponItemDefinition,e=this.shaderItemDefinition,j=function(b,a){if(a){d.onLoadAssets(b);d.checkLoadComplete()}else
d.onLoadFailure()};if(r&&f&&g){this.assetLoaders={};this.gearRenderables.length=0;for(var p=this.genderType===1,i=this.gearRenderablesByItemReferenceId,s=f.length,h=0;h<s;h++){var a=f[h],l=g[a];if(a in i)
this.gearRenderables.push(i[a]);else if(l)
this.assetLoaders[a]=new Spasm.TGXAssetLoader(a,l,p,j);else
console.log("ItemPreview: missing asset manifest for item id: "+ a)}
if(e){var b=""+ e.itemHash,c=e.equippingBlock;if(b&&c){var m=c.defaultDyes,n=c.customDyes,o=c.lockedDyes;if(m!==null&&m.length>0||n!==null&&n.length>0||o!==null&&o.length>0){var k=g[b];if(k)
this.assetLoaders[b]=new Spasm.TGXAssetLoader(b,k,p,j)}}}
var q=Object.keys(this.assetLoaders);q.length===0&&setTimeout(function(){d.checkLoadComplete()},0)}};Spasm.ItemPreview.prototype.setItemReferenceIds=function(a,d,e,b,c){Spasm.assertArray(a);Spasm.assertValid(b);Spasm.assertFunction(c);this.itemReferenceIds=a;this.primaryWeaponItemDefinition=d;this.shaderItemDefinition=e;this.assetManifests=b;this.callback=c;var f=this;if(!this.renderer.canRender())
setTimeout(function(){f.checkLoadComplete()},0);else
this.loadItems()};Spasm.ItemPreview.prototype.onLoadAssets=function(a){Spasm.assertInstance(a,Spasm.TGXAssetLoader);if(a.itemReferenceId in this.assetLoaders){var c=a.getGearDyes(this.renderer),b=a.getGearRenderable(this.renderer);b.setGearShaders(this.gearShaders);b.setGearDyes(c);this.gearRenderablesByItemReferenceId[a.itemReferenceId]=b;this.gearRenderables.push(b);delete this.assetLoaders[a.itemReferenceId]}};Spasm.ItemPreview.prototype.getTotalBoundingVolume=function(){for(var e=this.gearRenderables,d=[],h=e.length,b=0;b<h;b++)
for(var j=e[b],c=j.getBoundingVolumes(),g=c.length,a=0;a<g;a++){var f=c[a];d.push(f)}
var i=Spasm.boundingVolumeFromBoundingVolumes(d);return i};Spasm.ItemPreview.prototype.getBoundingVolumeForItemReferenceId=function(a){var b,c=this.gearRenderablesByItemReferenceId;if(a&&a in c){var d=c[a];b=d.getBoundingVolume()}else
b=null;return b};Spasm.ItemPreview.prototype.onLoadComplete=function(){var j=this.gearRenderables,a=this.focusedItemReferenceId,e=this.gearRenderablesByItemReferenceId,p=[],h=null,g=this.shaderItemDefinition;if(g){var m=""+ g.itemHash,i=e[m];if(i)
h=i.gearDyes}
for(var o=j.length,d=0;d<o;d++){var k=j[d];k.setShaderOverrideDyes(h);for(var f=k.getBoundingVolumes(),n=f.length,c=0;c<n;c++){var l=f[c];p.push(l)}}
var b;if(a&&a in e)
b=this.getBoundingVolumeForItemReferenceId(a);else
b=this.getTotalBoundingVolume();this.boundingVolume=b;this.camera.updateForBoundingVolume(b,!!a);if(!a)
this.camera.orientation.modelTranslationVertical=1.03;var q=this.renderer.canRender()&&this.skeleton.loadSuccess&&this.animation.loadSuccess;this.onFinishedLoading(q)};Spasm.ItemPreview.prototype.onFinishedLoading=function(b){var a=this.callback;if(a){!b&&this.stopAnimating(true);a(b);this.callback=null}};Spasm.ItemPreview.prototype.startAnimating=function(){if(!this.shouldAnimate){this.shouldAnimate=true;this.canvas.style.display="block";!this.isAnimating&&this.animate()}};Spasm.ItemPreview.prototype.stopAnimating=function(a){this.shouldAnimate=false;var b=typeof a==="undefined"?true:a;if(b)
this.canvas.style.display="none"};Spasm.ItemPreview.prototype.setCameraPreset=function(){};Spasm.ItemPreview.prototype.animate=function(){this.isAnimating=false;if(this.shouldAnimate&&this.renderer.canRender()){this.isAnimating=true;window.requestAnimationFrame(this.animationFrame)}else{this.stopAnimating();return}
var f=this.renderer.gl,t=this.skinningMatrices,s=this.itemReferenceIds,a=this.gearShaders,p=this.gearRenderables,d=this.skeleton,m=this.animation,b,l;if(s.length>1){l=true;if(d.loadComplete&&m.loadComplete)
if(d.loadSuccess&&d.loadSuccess){b=true;var h=this.frameIndex,k=m.frameCount,c,n=d.inverseObjectSpaceTransformMatrices,o=d.parentNodeIndices;if(k>0&&n&&o){if(h>=k)
c=0;else if(h<0)
c=k- 1;else
c=h;m.frameFillTransformBuffer(c,t,n,o);this.frameIndex=c+.5}}else
b=false;else
b=false}else{b=true;l=false}
this.camera.updateMatrices();var q=this.canvas,e=this.canvasSize,j=Math.abs(q.width),i=Math.abs(q.height);if(j!==e.width||i!==e.height){f.viewport(0,0,j,i);e.width=j;e.height=i}
f.clear(f.COLOR_BUFFER_BIT|f.DEPTH_BUFFER_BIT);var u=Object.keys(this.assetLoaders);if(a&&b&&u.length===0){a.setUniformData(this.cameraPositionUniformData);a.setUniformData(this.lightPositionUniformData);a.setUniformData(this.camera.uniformDatas.projectionMatrix);a.setUniformData(this.camera.uniformDatas.modelMatrix);a.setUniformData(this.camera.uniformDatas.viewMatrix);if(l)
a.setUniformData(this.skinningMatricesUniformData);else
a.setUniformData(this.identityMatricesUniformData);for(var r=p.length,g=0;g<r;g++){var v=p[g];v.render()}}};var Spasm=Spasm||{};Spasm.ReadyStateComplete=4;Spasm.HTTPStatusOK=200;Spasm.Loader=function(b){Spasm.assertPath(b,"invalid file path");this.filePath=b;var a=new XMLHttpRequest;this.request=a;a.onreadystatechange=this.stateChangeCallback();a.onprogress=this.progressCallback();a.open("GET",b);a.send()};Spasm.Loader.prototype={constructor:Spasm.Loader,stateChangeCallback:function(){var a=this;return function(){a.onStateChange()}},progressCallback:function(){var a=this;return function(){a.onProgress()}},onStateChange:function(){},onProgress:function(){}};Spasm.Loader.prototype.isComplete=function(){var a=this.request;return a.readyState===Spasm.ReadyStateComplete};Spasm.Loader.prototype.isCompleteAndOK=function(){var a=this.request;return a.readyState===Spasm.ReadyStateComplete&&a.status===Spasm.HTTPStatusOK};Spasm.BufferLoader=function(b,a){Spasm.Loader.call(this,b);this.callback=a;this.request.responseType="arraybuffer"};Spasm.BufferLoader.prototype=Object.create(Spasm.Loader.prototype);Spasm.BufferLoader.prototype.onStateChange=function(){this.isComplete()&&this.callback(this)};Spasm.JSONLoader=function(b,a){Spasm.Loader.call(this,b);this.callback=a;this.parsedResponse=null};Spasm.JSONLoader.prototype=Object.create(Spasm.Loader.prototype);Spasm.JSONLoader.prototype.onStateChange=function(){if(this.isComplete()){if(this.isCompleteAndOK()){var b=this.request,a=b.responseText;try{this.parsedResponse=JSON.parse(a)}catch(c){console.log("Spasm.JSONLoader parse error : "+ c)}}
this.callback(this)}};var Spasm=Spasm||{};Spasm.Path={};Spasm.Path.stripLeadingSlash=function(a){Spasm.assertPath(a);var c=a.length,b;if(c>0)
b=a[0]==="/"?a.substring(1,a.length):a;else
b=a;return b};Spasm.Path.stripTrailingSlash=function(a){Spasm.assertPath(a);var c=a.length,b;if(c>0)
b=a[c- 1]==="/"?a.substring(0,a.length- 1):a;else
b=a;return b};Spasm.Path.combine=function(a,b){Spasm.assertPath(a);Spasm.assertPath(b);var c=Spasm.Path.stripTrailingSlash(a)+"/"+ Spasm.Path.stripLeadingSlash(b);return c};Spasm.assertEqual(Spasm.Path.stripLeadingSlash("/a/"),"a/");Spasm.assertEqual(Spasm.Path.stripTrailingSlash("/b/"),"/b");Spasm.assertEqual(Spasm.Path.combine("/c/","/d/"),"/c/d/");var Spasm=Spasm||{};Spasm.RenderMesh=function(a){Spasm.assertValid(a);this.renderMesh=a;this.boundingVolume=Spasm.boundingVolumeFromRenderMetadata(a.bounding_volume);this.skinning=a.skinning;this.positionOffset=a.position_offset;this.positionScale=a.position_scale;var b=a.texcoord0_scale_offset;this.textureScale=[b[0],b[1]];this.textureOffset=[b[2],b[3]];this.stageParts=[];for(var i=a.stage_part_list.length,e=0;e<i;e++){var g=a.stage_part_list[e],j=new Spasm.RenderMeshStagePart(g);this.stageParts.push(j)}
this.stagePartOffsets=a.stage_part_offsets;this.stagePartVertexStreamLayoutLookup=a.stage_part_vertex_stream_layout_lookup;this.stagePartVertexStreamLayoutDefintions=a.stage_part_vertex_stream_layout_definitions;this.indexBufferMetadata={fileName:a.index_buffer.file_name,byteSize:a.index_buffer.byte_size,valueByteSize:a.index_buffer.value_byte_size};this.vertexBufferMetadatas=[];for(var h=a.vertex_buffers.length,d=0;d<h;d++){var c=a.vertex_buffers[d],f={fileName:c.file_name,byteSize:c.byte_size,strideByteSize:c.stride_byte_size};this.vertexBufferMetadatas.push(f)}};Spasm.RenderMesh.prototype={};Spasm.RenderMesh.prototype.setVertexBuffers=function(a){Spasm.assertArrayInstances(a,Spasm.VertexBuffer);this.vertexBuffers=a};Spasm.RenderMesh.prototype.setIndexBuffer=function(a){Spasm.assertInstance(a,Spasm.IndexBuffer);this.indexBuffer=a};Spasm.RenderMesh.prototype.getRenderable=function(a,c,b){Spasm.assertWebGLContext(a);Spasm.assertValid(c);var g=this.getUniformDatas(c,b),f=this.vertexBuffers,h=this.indexBuffer,d=this.getRenderableParts(a),e=this.boundingVolume,i=new Spasm.Renderable(a,f,h,g,b,d,e);return i};Spasm.RenderMesh.prototype.renderStagesWeCareAbout=[0];Spasm.RenderMesh.prototype.getRenderableParts=function(f){Spasm.assertWebGLContext(f);for(var i=this.stageParts,e=this.stagePartOffsets,g=this.renderStagesWeCareAbout,q=i.length,m=e.length,j=g.length,h=[],c=0;c<j;c++){var d=g[c];Spasm.assert(d+ 1<m);for(var k=e[d],l=e[d+ 1],b=k;b<l;b++){Spasm.assert(b<q);var a=i[b],s=a.lodCategory,o=s.name;if(o.indexOf("0")>=0){var u=a.startIndex,t=a.indexCount,n=a.gearDyeChangeColorIndex,r=a.primitiveType===3?f.TRIANGLES:f.TRIANGLE_STRIP,p=new Spasm.RenderablePart(u,t,n,r);h.push(p)}}}
return h};Spasm.RenderMesh.prototype.getAttributes=function(E){Spasm.assertWebGLContext(E);var y=this.vertexBufferMetadatas,A=y.length,r=this.stagePartVertexStreamLayoutDefintions,G=r.length;Spasm.assertEqual(G,1);var S=r[0],t=S.formats,J=t.length;Spasm.assertEqual(A,J);for(var w=[],z=[],P={},e=0;e<A;e++){var D=[],Q=y[e],h=Q.strideByteSize,u=t[e],M=u.stride;Spasm.assertEqual(h,M);for(var s=u.elements,H=s.length,x=["ubyte","byte","ushort","short","uint","int","float"],k={},q=0,i=0;i<H;i++){for(var f=s[i],C=f.semantic_index,W=f.semantic,B=f.type,p=W.replace("_tfx_vb_semantic_",""),m=B.replace("_vertex_format_attribute_",""),b="",a=0,c=0,O=x.length,n=0;n<O;n++){var o=x[n],K=m.indexOf(o);if(K==0){var I=m.length,N=m[I- 1];c=parseInt(N);Spasm.assertInteger(c);switch(o){case"byte":b="BYTE";a=1;break;case"ubyte":b="UNSIGNED_BYTE";a=1;break;case"short":b="SHORT";a=2;break;case"ushort":b="UNSIGNED_SHORT";a=2;break;case"int":b="INT";a=4;break;case"uint":b="UNSIGNED_INT";a=4;break;case"float":b="FLOAT";a=4;break;default:Spasm.assert(false,"invalid elementValueSizeName: "+ o)}
break}}
var g=a*c,T=E[b],V=f.normalized;if(p.indexOf("position")>=0&&b==="FLOAT"){this.positionScale=[1,1,1];this.positionOffset=[0,0,0]}
var d=""+ p+""+ C;d in z&&console.log("oops - duplicate semantic identifier: "+ d);z.push(d);k[d]=g;P[d]={vertexBufferIndex:e,byteOffset:q,elementSize:g,elementTypeName:B,vertexStride:h,elementValueSize:a,elementValueCount:c};var U=c===1?"float":"vec"+ c,X=new Spasm.VertexBufferAttribute(p,C,U,T,c,V,g,q);D.push(X);q+=g}
for(var j=0,v=Object.keys(k),L=v.length,l=0;l<L;l++){var R=v[l];j+=k[R]}
var F=j- h;Spasm.assert(F===0,"non-zero stride difference: given - "+ h+", calculated - "+ j);w.push(D)}
return w};Spasm.RenderMesh.prototype.getUniformDatas=function(u,c){var r=this.positionScale,p=this.positionOffset,t=this.textureScale,s=this.textureOffset,a=Spasm.Shader.InputTypes,b=Spasm.Shader.ValueTypes,m=new Spasm.ShaderInput(a.uniform,b.vec3,"u_position_scale"),i=new Spasm.UniformData(m,new Float32Array(r)),k=new Spasm.ShaderInput(a.uniform,b.vec3,"u_position_offset"),g=new Spasm.UniformData(k,new Float32Array(p)),n=new Spasm.ShaderInput(a.uniform,b.vec2,"u_texcoord_scale"),j=new Spasm.UniformData(n,new Float32Array(t)),l=new Spasm.ShaderInput(a.uniform,b.vec2,"u_texcoord_offset"),h=new Spasm.UniformData(l,new Float32Array(s)),e=[i,g,j,h];for(var f in c){var d=c[f];if(d){var q=new Spasm.ShaderInput(a.uniform,b.sampler2D,"u_texture_"+ f),o=new Spasm.UniformData(q,d.index);e.push(o)}}
return e};var Spasm=Spasm||{};Spasm.RenderMeshStagePart=function(a){Spasm.assertValid(a);this.stagePart=a;var c=a.shader,b=c?c.static_textures:null,d=b&&b.length?b.length:0;this.shader=c;this.staticTextures=b;this.staticTextureCount=d;this.startIndex=a.start_index;this.indexCount=a.index_count;this.indexMin=a.index_min;this.indexMax=a.index_max;this.flags=a.flags;this.gearDyeChangeColorIndex=a.gear_dye_change_color_index;this.primitiveType=a.primitive_type;this.lodCategory=a.lod_category;this.lodRun=a.lod_run};Spasm.RenderMeshStagePart.prototype={};var Spasm=Spasm||{};Spasm.Skeleton=function(a,b){Spasm.assertPath(a);Spasm.assertFunction(b);this.skeletonPath=a;this.callback=b;this.loadComplete=false;this.loadSuccess=false;var d=this,c=function(a){d.onLoadSkeleton(a)};this.skeleton=null;this.skeletonLoader=new Spasm.JSONLoader(a,c);this.inverseObjectSpaceTransformMatrices=null;this.parentNodeIndices=null;this.nodeCount=0};Spasm.Skeleton.prototype={};Spasm.Skeleton.prototype.onLoadSkeletonSuccess=function(i){Spasm.assertValid(i);this.loadSuccess=true;for(var c=i.definition,r=c.default_object_space_transforms,f=c.default_inverse_object_space_transforms,o=c.nodes,d=[],h=[],m=f.length,b=0;b<m;b++){var g=f[b],a=g.ts,p=a[3],n=g.r,l=[a[0],a[1],a[2]],j=new Spasm.TransformSRT(p,n,l),e=mat4.create();j.setMatrix(e);d.push(e);var q=o[b],k=q.parent_node_index;h.push(k)}
this.inverseObjectSpaceTransformMatrices=d;this.parentNodeIndices=h;if(this.callback){this.callback(this,true);this.callback=null}};Spasm.Skeleton.prototype.onLoadSkeletonFailure=function(){this.loadSuccess=false;if(this.callback){this.callback(this,false);this.callback=null}};Spasm.Skeleton.prototype.onLoadSkeleton=function(a){Spasm.assertInstance(a,Spasm.JSONLoader);this.loadComplete=true;if(a.isCompleteAndOK()){var b=a.parsedResponse;this.onLoadSkeletonSuccess(b)}else
this.onLoadSkeletonFailure()};var Spasm=Spasm||{};Spasm.TextureLoader=function(b,c){Spasm.assertPath(b);Spasm.assertFunction(c);this.filePath=b;this.callback=c;this.loadComplete=false;this.loadSuccess=false;var a=document.createElement("img");this.image=a;a.crossOrigin="anonymous";var d=this;a.onload=function(){d.onImageLoad()};a.onerror=function(){d.onImageError()};a.src=b};Spasm.TextureLoader.prototype={constructor:Spasm.TextureLoader,onImageLoad:function(){this.loadComplete=true;this.loadSuccess=true;this.callback(this)},onImageError:function(){this.loadComplete=true;this.loadSuccess=false;this.callback(this)},isComplete:function(){return this.loadComplete},isCompleteAndOK:function(){return this.loadComplete&&this.loadSuccess}};var Spasm=Spasm||{};Spasm.TGXAssetLoader=function(a,b,d,c){Spasm.assertString(a);Spasm.assertValid(b);Spasm.assertBoolean(d);Spasm.assertFunction(c);this.itemReferenceId=a;this.assetManifest=b;this.isFemale=d;this.callback=c;this.contentLoaders={gear:{},geometry:{},textures:{},platedTextures:{}};this.contentLoaded={gear:{},geometry:{},textures:{},platedTextures:{}};this.onLoadAssetManifest()};Spasm.TGXAssetLoader.prototype={};Spasm.TGXAssetLoader.prototype.onContentLoadComplete=function(){if(this.callback){this.callback(this,true);this.callback=null}};Spasm.TGXAssetLoader.prototype.onLoadFailure=function(){if(this.callback){this.callback(this,false);this.callback=null}};Spasm.TGXAssetLoader.prototype.getGearDyes=function(b){Spasm.assertInstance(b,Spasm.Renderer);var e=b.gl;Spasm.assertWebGLContext(e);var u=this.contentLoaded.gear,w=Object.keys(u),F=w.length;Spasm.assert(F>=1);for(var x=this.contentLoaded.textures,t=Object.keys(x),E=t.length,H=w[0],k=u[H],r={customDyes:k.custom_dyes||[],defaultDyes:k.default_dyes||[],lockedDyes:k.locked_dyes||[]},v={},p=Object.keys(r),A=p.length,f=0;f<A;f++){for(var q=p[f],o=r[q],D=o.length,s=[],j=0;j<D;j++){for(var y=o[j],g=y.textures,z=g.diffuse,B=g.normal,C=g.decal,l=z.reference_id,m=B.reference_id,n=C.reference_id,c={},i=0;i<E;i++){var d=t[i],h=x[d],a;if(l&&d.indexOf(l)>=0){a=b.getDiffuseDyeTextureIndex();c.diffuse=new Spasm.Texture(e,a,h)}else if(m&&d.indexOf(m)>=0){a=b.getNormalDyeTextureIndex();c.normal=new Spasm.Texture(e,a,h)}else if(n&&d.indexOf(n)>=0){a=b.getDecalDyeTextureIndex();c.decal=new Spasm.Texture(e,a,h)}else
a=null}
var G=new Spasm.GearDye(y,c);s.push(G)}
v[q]=s}
return v};Spasm.TGXAssetLoader.prototype.getGearRenderable=function(a){Spasm.assertInstance(a,Spasm.Renderer);var b=a.gl;Spasm.assertWebGLContext(b);var d=this.itemReferenceId,c=this.getGearRenderableModels(a),e=new Spasm.GearRenderable(b,d,c);return e};Spasm.TGXAssetLoader.prototype.getGearRenderableModels=function(g){Spasm.assertInstance(g,Spasm.Renderer);var F=g.gl;Spasm.assertWebGLContext(F);var m=this.contentLoaded,B=m.geometry,j=[],a=[],s=m.gear;for(var A in s){var E=s[A],q=E.art_content;if(q){var h=q.gear_set,r=h.regions,p=r.length;if(p>0)
for(var f=0;f<p;f++){var D=r[f],o=D.pattern_list,z=o.length;if(z>0)
for(var C=o[0],i=C.geometry_hashes,t=i.length,c=0;c<t;c++){var w=i[c];a.push(w)}}
else{var b=null;if(this.isFemale)
b=h.female_override_art_arrangement;else
b=h.base_art_arrangement;if(b!=null)
for(var l=b.geometry_hashes,x=l.length,e=0;e<x;e++){var y=l[e];a.push(y)}}}}
for(var u=a.length,d=0;d<u;d++){var k=a[d],n=B[k];if(n){var v=this.getGearRenderableModel(g,k,n);j.push(v)}}
return j};Spasm.TGXAssetLoader.prototype.getGearRenderableModel=function(d,O,j){Spasm.assertInstance(d,Spasm.Renderer);Spasm.assertString(O);Spasm.assertValid(j);var a=d.gl,P=this.contentLoaded,db=j["render_metadata.js"],W=new Uint8Array(db),s=Spasm.Utilities.jsonFromCharBuffer(W);Spasm.assertValid(s);var Ab=s.render_model,A=Ab.render_meshes,N=A.length,y=null,z=null,t=null,G=d.getDiffusePlateTextureIndex(),I=d.getNormalPlateTextureIndex(),D=d.getGearstackPlateTextureIndex(),F=s.texture_plates,sb=F.length;if(sb===1)
for(var zb=F[0],w=zb.plate_set,kb=w.diffuse,pb=w.normal,cb=w.gearstack,R=kb.reference_id,S=pb.reference_id,Q=cb.reference_id,h=P.platedTextures,K=Object.keys(h),mb=K.length,r=0;r<mb;r++){var c=K[r];if(c.indexOf(R)>=0){var jb=h[c];y=new Spasm.Texture(a,G,jb)}else if(c.indexOf(S)>=0){var ob=h[c];z=new Spasm.Texture(a,I,ob)}else if(c.indexOf(Q)>=0){var bb=h[c];t=new Spasm.Texture(a,D,bb)}}
else{var g=P.textures,J=Object.keys(g),lb=J.length;if(N>0)
for(var L=A[0],xb=L.stage_part_list.length,x=0;x<xb;x++){var ib=L.stage_part_list[x],v=ib.shader;if(v&&v.static_textures){var i=v.static_textures,nb=i.length;if(nb>=5){for(var Z=i[0],ab=i[2],X=i[4],l=null,m=null,k=null,q=0;q<lb;q++){var b=J[q];if(b.indexOf(Z)>=0)
l=b;else if(b.indexOf(ab)>=0)
m=b;else if(b.indexOf(X)>=0)
k=b}
if(l&&m&&k){var U=g[l],Y=g[m],T=g[k];y=new Spasm.Texture(a,G,U);z=new Spasm.Texture(a,I,Y);t=new Spasm.Texture(a,D,T);break}}}}}
for(var yb={diffuse:y,normal:z,gearstack:t},Eb=[],M=[],u=0;u<N;u++){var B=A[u],f=new Spasm.RenderMesh(B),p=B.index_buffer,hb=p.file_name,gb=p.byte_size,V=p.value_byte_size,Db=gb/V,vb=j[hb],rb=new Spasm.IndexBuffer(a,vb,Db,a.UNSIGNED_SHORT);f.setIndexBuffer(rb);for(var Cb=f.getAttributes(a),E=B.vertex_buffers,ub=E.length,H=[],e=0;e<ub;e++){var o=E[e],n=o.file_name,eb=o.byte_size,C=o.stride_byte_size,Bb=eb/C;if(!Spasm.Utilities.stringEndsWith(n,".tgx"))
n+=".tgx";var tb=j[n],qb=new Spasm.VertexBuffer(a,tb,C,Bb,Cb[e]);H.push(qb)}
f.setVertexBuffers(H);var wb=f.getRenderable(a,Eb,yb);M.push(wb)}
var fb=new Spasm.GearRenderableModel(a,O,M);return fb};Spasm.TGXAssetLoader.prototype.onLoadAssetManifest=function(){var m=this.assetManifest;Spasm.assertValid(m);for(var G=m.content,a=null,o=0;o<G.length;o++){a=G[o];if(a.platform==="web")
break}
var b=[],S={"2":2,"6":6,"21":21},J=a.dye_index_set;J&&b.push(J);var k=a.region_index_sets,Z=a.female_index_set,fb=a.male_index_set;if(k)
for(var K=Object.keys(k),bb=K.length,l=0;l<bb;l++){var L=K[l],X=""+ L;if(!(X in S)){var D=k[L],R=D.length;R>0&&b.push(D[0])}}
else if(this.isFemale)
b.push(Z);else
b.push(fb);for(var M=m.gear,jb=a.geometry,kb=a.textures,ab=a.plate_regions,A={},F={},w={},eb=b.length||0,n=0;n<eb;n++){var c=b[n]||{};if(c.geometry)
for(var B=c.geometry,h=0;h<B.length;h++){var t=B[h];A[t]=t}
if(c.textures)
for(var C=c.textures,i=0;i<C.length;i++){var u=C[i];F[u]=u}
if(c.plate_regions)
for(var s=c.plate_regions,e=0;e<s.length;e++){var q=s[e];w[q]=q}}
for(var hb=this.contentLoaders.gear,O=this.contentLoaders.geometry,cb=this.contentLoaders.textures,Q=this.contentLoaders.platedTextures,d=this,ib=M.length,p=0;p<ib;p++){var H=M[p];Spasm.assert(Spasm.Utilities.stringEndsWith(H,".js"));var I=Spasm.Path.combine(Spasm.Content.GearPath,H);hb[I]=new Spasm.JSONLoader(I,function(a){d.onLoadGearJSON(a)})}
for(var x=Object.keys(A),T=x.length,g=0;g<T;g++){var db=x[g],W=jb[db],z=Spasm.Path.combine(Spasm.Content.GeometryPath,W);O[z]=new Spasm.TGXBinLoader(z,function(a){d.onLoadGeometryBuffer(a)})}
for(var y=Object.keys(F),V=y.length,j=0;j<V;j++){var gb=y[j],Y=kb[gb],E=Spasm.Path.combine(Spasm.Content.TexturesPath,Y);cb[E]=new Spasm.TextureLoader(E,function(a){d.onLoadTexture(a)})}
for(var r=Object.keys(w),N=r.length,f=0;f<N;f++){var U=r[f],P=ab[U],v=Spasm.Path.combine(Spasm.Content.PlatedTexturesPath,P);Q[v]=new Spasm.TextureLoader(v,function(a){d.onLoadPlatedTexture(a)})}};Spasm.TGXAssetLoader.prototype.checkContentLoadComplete=function(){for(var d=this.contentLoaders,b=0,c=Object.keys(d),e=c.length,a=0;a<e;a++){var f=c[a],g=d[f],h=Object.keys(g);b+=h.length}
b===0&&this.onContentLoadComplete()};Spasm.TGXAssetLoader.prototype.onLoadGearJSON=function(b){Spasm.assertInstance(b,Spasm.JSONLoader);if(b.isCompleteAndOK()){var a=b.filePath;Spasm.assertPath(a);var d=b.parsedResponse;Spasm.assertValid(d);this.contentLoaded.gear[a]=d;var c=this.contentLoaders.gear;Spasm.assert(a in c);var e=c[a];Spasm.assertEqual(e,b);delete c[a];this.checkContentLoadComplete()}else
this.onLoadFailure()};Spasm.TGXAssetLoader.prototype.onLoadGeometryBuffer=function(a){Spasm.assertInstance(a,Spasm.TGXBinLoader);if(a.isCompleteAndOK()){var b=a.filePath;Spasm.assertPath(b);var d=a.fileIdentifier;Spasm.assertString(d);var e=a.getFileBuffers();Spasm.assertValid(e);this.contentLoaded.geometry[d]=e;var c=this.contentLoaders.geometry;Spasm.assert(b in c);var f=c[b];Spasm.assertEqual(f,a);delete c[b];this.checkContentLoadComplete()}else
this.onLoadFailure()};Spasm.TGXAssetLoader.prototype.onLoadTexture=function(a){Spasm.assertInstance(a,Spasm.TextureLoader);if(a.isCompleteAndOK()){var b=a.filePath;Spasm.assertPath(b);var d=a.image;Spasm.assertValid(d);this.contentLoaded.textures[b]=d;var c=this.contentLoaders.textures,e=c[b];Spasm.assertEqual(e,a);delete c[b];this.checkContentLoadComplete()}else
this.onLoadFailure()};Spasm.TGXAssetLoader.prototype.onLoadPlatedTexture=function(a){Spasm.assertInstance(a,Spasm.TextureLoader);if(a.isCompleteAndOK()){var b=a.filePath;Spasm.assertPath(b);var d=a.image;Spasm.assertValid(d,Image);this.contentLoaded.platedTextures[b]=d;var c=this.contentLoaders.platedTextures,e=c[b];Spasm.assertEqual(e,a);delete c[b];this.checkContentLoadComplete()}else
this.onLoadFailure()};var Spasm=Spasm||{};Spasm.TGXBinLoader=function(b,a){Spasm.BufferLoader.call(this,b,a);this.filePositions=[]};Spasm.TGXBinLoader.prototype=Object.create(Spasm.BufferLoader.prototype);Spasm.TGXBinLoader.prototype.onStateChange=function(){var a=this.request;if(a.readyState===Spasm.ReadyStateComplete){if(a.status===Spasm.HTTPStatusOK){var b=a.response;this.parseFileIndex(b)}
this.callback(this)}};Spasm.TGXBinLoader.prototype.parseFileIndex=function(e){Spasm.assertArrayBuffer(e);this.buffer=e;var b=true,c=new DataView(e),s=[c.getUint8(0),c.getUint8(1),c.getUint8(2),c.getUint8(3)],f="TGXM",y=[f.charCodeAt(0),f.charCodeAt(1),f.charCodeAt(2),f.charCodeAt(3)];for(var p in s)
Spasm.assertEqual(s[p],y[p]);var n=16,a=128,h=8,E=8,u=c.getInt32(4,b);if(u!==1)
if(u===2){a=256;for(var v=16,l=a,w=new DataView(e,v,l),q="",g=0;g<l;g++){var m=w.getUint8(g);if(m!==0)
q+=String.fromCharCode(m)}
this.fileIdentifier=q;n+=256}else
Spasm.assert(false);var x=c.getInt32(8,b),r=c.getInt32(12,b);Spasm.assert(r>=0);var i=a+ h+ E;Spasm.assertEqual(x,i);for(var k=0;k<r;k++){for(var B=n+ i*k,d=new DataView(e,B,i),t="",j=0;j<a;j++){var o=d.getUint8(j);if(o!==0)
t+=String.fromCharCode(o)}
var z=d.getUint32(a+ 0,b),A=d.getUint32(a+ 4,b),F=z+ Math.pow(2,32)*A,C=d.getUint32(a+ h+ 0,b),D=d.getUint32(a+ h+ 4,b),G=C+ Math.pow(2,32)*D;this.filePositions.push({fileName:t,fileByteOffset:F,fileByteSize:G})}};Spasm.TGXBinLoader.prototype.getFileBuffers=function(){var h=this.buffer,d=this.filePositions;Spasm.assertArrayBuffer(h);for(var f={},i=d.length,a=0;a<i;a++){var b=d[a],j=b.fileName,c=b.fileByteOffset,e=b.fileByteSize,g=h.slice(c,e+ c);f[j]=g;Spasm.assertEqual(g.byteLength,e)}
return f};var Spasm=Spasm||{};Spasm.TransformSRT=function(c,b,a){c=c||1;b=b||[0,0,0,1];a=a||[0,0,0];this.scale=c;this.rotation=quat.create();this.translation=vec3.create();quat.copy(this.rotation,b);vec3.copy(this.translation,a)};Spasm.TransformSRT.prototype={};Spasm.TransformSRT.prototype.copy=function(a){Spasm.assertInstance(a,Spasm.TransformSRT);this.scale=a.scale;this.rotation.copy(a.rotation);this.translation.copy(a.translation)};Spasm.TransformSRT.prototype.multiply=function(a,b){Spasm.assertInstance(a,Spasm.TransformSRT);Spasm.assertInstance(a,Spasm.TransformSRT);quat.multiply(this.rotation,a.rotation,b.rotation);this.scale=a.scale*b.scale;vec3.copy(this.translation,b.translation);vec3.transformQuat(this.translation,this.translation,a.rotation);vec3.scale(this.translation,this.translation,a.scale);vec3.add(this.translation,this.translation,a.translation)};Spasm.TransformSRT.prototype.setMatrix=function(a){var c=this.scale,b=this.translation;mat4.fromQuat(a,this.rotation);mat4.scale(a,a,[c,c,c]);a[12]=b[0];a[13]=b[1];a[14]=b[2];return a};var Spasm=Spasm||{};Spasm.Utilities={};Spasm.Utilities.stringEndsWith=function(a,b){Spasm.assertString(a);Spasm.assertString(b);var c=a.indexOf(b,a.length- b.length)!==-1;return c};Spasm.Utilities.jsonFromCharBuffer=function(c){var b=Spasm.Utilities.stringFromCharBuffer(c),a=null;try{a=JSON.parse(b)}catch(d){console.log("error parsing json from char buffer: "+ d)}
return a};Spasm.Utilities.stringFromCharBuffer=function(b){Spasm.assertInstance(b,Uint8Array);for(var d=b.byteLength,c="",a=0;a<d;a++)
c+=String.fromCharCode(b[a]);return c};var Spasm=Spasm||{};Spasm.Buffer=function(a,c,b){Spasm.assertWebGLContext(a);Spasm.assertValid(c);Spasm.assertInteger(b);this.gl=a;this.arrayBuffer=c;this.bufferType=b;var d=a.createBuffer();this.bufferHandle=d;a.bindBuffer(b,d);a.bufferData(b,c,a.STATIC_DRAW)};Spasm.Buffer.prototype={constructor:Spasm.Buffer};Spasm.Buffer.prototype.bindBuffer=function(){var c=this.gl,b=this.bufferType,a=this.bufferHandle;c.bindBuffer(b,a)};var Spasm=Spasm||{};Spasm.GearRenderable=function(c,b,a){Spasm.assertWebGLContext(c);Spasm.assertString(b);Spasm.assertArrayInstances(a,Spasm.GearRenderableModel);this.gl=c;this.itemId=b;this.renderableModels=a};Spasm.GearRenderable.prototype={};Spasm.GearRenderable.prototype.getBoundingVolume=function(){var a=this.getBoundingVolumes(),b=Spasm.boundingVolumeFromBoundingVolumes(a);return b};Spasm.GearRenderable.prototype.getBoundingVolumes=function(){for(var c=this.renderableModels,f=c.length,d=[],a=0;a<f;a++)
for(var h=c[a],e=h.renderables,g=e.length,b=0;b<g;b++){var j=e[b],i=j.boundingVolume;d.push(i)}
return d};Spasm.GearRenderable.prototype.setGearShaders=function(b){Spasm.assertInstance(b,Spasm.GearShader);this.gearShaders=b;for(var c=this.renderableModels,d=c.length,a=0;a<d;a++){var e=c[a];e.setGearShaders(b)}};Spasm.GearRenderable.prototype.getResolvedDyeList=function(g,c){Spasm.assertValid(g);for(var j=g.defaultDyes,m=g.lockedDyes,a={},q=j.length,d=0;d<q;d++){var l=j[d];a[l.slotTypeIndex]=l}
if(c){Spasm.assertValid(c);for(var k=c.customDyes,r=k.length,e=0;e<r;e++){var n=k[e];a[n.slotTypeIndex]=n}}
for(var s=m.length,f=0;f<s;f++){var o=m[f];a[o.slotTypeIndex]=o}
for(var h=Object.keys(a),p=h.length,i=[],b=0;b<p;b++){var t=h[b],u=a[t];i.push(u)}
return i};Spasm.GearRenderable.prototype.setGearDyes=function(b){Spasm.assertValid(b);this.gearDyes=b;for(var f=this.getResolvedDyeList(b,null),c=this.renderableModels,d=c.length,a=0;a<d;a++){var e=c[a];e.setGearDyes(f)}};Spasm.GearRenderable.prototype.setShaderOverrideDyes=function(a){if(a){Spasm.assertValid(a);this.shaderOverrideDyes=a;for(var f=this.getResolvedDyeList(this.gearDyes,a),c=this.renderableModels,d=c.length,b=0;b<d;b++){var e=c[b];e.setGearDyes(f)}}else
this.setGearDyes(this.gearDyes)};Spasm.GearRenderable.prototype.render=function(){for(var b=this.renderableModels,c=b.length,a=0;a<c;a++){var d=b[a];d.render()}};Spasm.GearRenderableModel=function(c,a,b){Spasm.assertWebGLContext(c);Spasm.assertString(a);Spasm.assertArrayInstances(b,Spasm.Renderable);this.gl=c;this.renderModelId=a;this.renderables=b};Spasm.GearRenderableModel.prototype={};Spasm.GearRenderableModel.prototype.setGearShaders=function(b){Spasm.assertInstance(b,Spasm.GearShader);this.gearShaders=b;for(var c=this.renderables,d=c.length,a=0;a<d;a++){var e=c[a];e.setGearShaders(b)}};Spasm.GearRenderableModel.prototype.setGearDyes=function(b){Spasm.assertArrayInstances(b,Spasm.GearDye);this.gearDyes=b;for(var c=this.renderables,d=c.length,a=0;a<d;a++){var e=c[a];e.setGearDyes(b)}};Spasm.GearRenderableModel.prototype.render=function(){for(var b=this.renderables,c=b.length,a=0;a<c;a++){var d=b[a];d.render()}};var Spasm=Spasm||{};Spasm.GearShader=function(c){Spasm.assertWebGLContext(c);this.gl=c;var a=Spasm.Shader.InputTypes,b=Spasm.Shader.ValueTypes;this.uniforms={projectionMatrix:new Spasm.ShaderInput(a.uniform,b.mat4,"u_projection_matrix"),modelMatrix:new Spasm.ShaderInput(a.uniform,b.mat4,"u_model_matrix"),viewMatrix:new Spasm.ShaderInput(a.uniform,b.mat4,"u_view_matrix"),positionScale:new Spasm.ShaderInput(a.uniform,b.vec3,"u_position_scale"),positionOffset:new Spasm.ShaderInput(a.uniform,b.vec3,"u_position_offset"),texcoordScale:new Spasm.ShaderInput(a.uniform,b.vec2,"u_texcoord_scale"),texcoordOffset:new Spasm.ShaderInput(a.uniform,b.vec2,"u_texcoord_offset"),skinningMatrices:new Spasm.ShaderInput(a.uniform,b.vec4,"u_skinning_matrices",72*3),textureDiffuse:new Spasm.ShaderInput(a.uniform,b.sampler2D,"u_texture_diffuse"),textureNormal:new Spasm.ShaderInput(a.uniform,b.sampler2D,"u_texture_normal"),textureGearstack:new Spasm.ShaderInput(a.uniform,b.sampler2D,"u_texture_gearstack"),textureDyeDiffuse:new Spasm.ShaderInput(a.uniform,b.sampler2D,"u_texture_dye_diffuse"),textureDyeNormal:new Spasm.ShaderInput(a.uniform,b.sampler2D,"u_texture_dye_normal"),textureDyeDecal:new Spasm.ShaderInput(a.uniform,b.sampler2D,"u_texture_dye_decal"),blendModeUniform:new Spasm.ShaderInput(a.uniform,b.int,"u_blend_mode"),changeColor:new Spasm.ShaderInput(a.uniform,b.vec4,"u_change_color"),decalAlphaMapTransform:new Spasm.ShaderInput(a.uniform,b.vec4,"u_decal_alpha_map_transform"),decalBlendOption:new Spasm.ShaderInput(a.uniform,b.int,"u_decal_blend_option"),detailNormalContributionStrength:new Spasm.ShaderInput(a.uniform,b.vec4,"u_detail_normal_contribution_strength"),detailTransform:new Spasm.ShaderInput(a.uniform,b.vec4,"u_detail_transform"),specularProperties:new Spasm.ShaderInput(a.uniform,b.vec4,"u_specular_properties"),subsurfaceScatteringStrength:new Spasm.ShaderInput(a.uniform,b.vec4,"u_subsurface_scattering_strength"),cameraPosition:new Spasm.ShaderInput(a.uniform,b.vec3,"u_camera_position"),lightPosition:new Spasm.ShaderInput(a.uniform,b.vec3,"u_light_position")};this.attributes={position:new Spasm.ShaderInput(a.attribute,b.vec4,"a_position"),normal:new Spasm.ShaderInput(a.attribute,b.vec4,"a_normal"),tangent:new Spasm.ShaderInput(a.attribute,b.vec4,"a_tangent"),texcoord:new Spasm.ShaderInput(a.attribute,b.vec2,"a_texcoord"),texcoord1:new Spasm.ShaderInput(a.attribute,b.vec2,"a_texcoord1"),texcoord2:new Spasm.ShaderInput(a.attribute,b.vec2,"a_texcoord2"),blendIndices:new Spasm.ShaderInput(a.attribute,b.vec4,"a_blendindices"),blendWeights:new Spasm.ShaderInput(a.attribute,b.vec4,"a_blendweight")};this.varyings={position:new Spasm.ShaderInput(a.varying,b.vec3,"v_position"),normal:new Spasm.ShaderInput(a.varying,b.vec3,"v_normal"),binormal:new Spasm.ShaderInput(a.varying,b.vec3,"v_binormal"),tangent:new Spasm.ShaderInput(a.varying,b.vec3,"v_tangent"),texcoord:new Spasm.ShaderInput(a.varying,b.vec2,"v_texcoord"),texcoord2:new Spasm.ShaderInput(a.varying,b.vec2,"v_texcoord2")};this.vertexShaders={};this.vertexShaderInputs={};this.fragmentShaders={};this.fragmentShaderInputs={};this.shaderPrograms={};this.uniformDatas={}};Spasm.GearShader.prototype={};Spasm.GearShader.prototype.getVertexShaderSourceLines=function(d,e,c){var i=this.getVertexShaderKey(d,e,c),f=this.getVertexShaderInput(d,e,c),a=[];a.push("// Spasm.GearShader vertex shader");a.push("// "+ i);a.push("");a.push("precision mediump float;");a.push("");for(var g=f.length,b=0;b<g;b++){var h=f[b];a.push(h.declaration)}
a.push("");a.push("mat4 transpose(mat4 inMatrix) {vec4 i0 = inMatrix[0];vec4 i1 = inMatrix[1];vec4 i2 = inMatrix[2];vec4 i3 = inMatrix[3];mat4 outMatrix = mat4(vec4(i0.x, i1.x, i2.x, i3.x),vec4(i0.y, i1.y, i2.y, i3.y),vec4(i0.z, i1.z, i2.z, i3.z),vec4(i0.w, i1.w, i2.w, i3.w));return outMatrix;}");a.push("mat4 get_bone_transform(int bone_index)");a.push("{");a.push("int stride_bone_index = bone_index * 3;");a.push("vec4 i0 = u_skinning_matrices[stride_bone_index + 0];vec4 i1 = u_skinning_matrices[stride_bone_index + 1];vec4 i2 = u_skinning_matrices[stride_bone_index + 2];vec4 i3 = vec4(0.0, 0.0, 0.0, 1.0);");a.push("mat4 bone_transform = mat4(vec4(i0.x, i1.x, i2.x, i3.x),vec4(i0.y, i1.y, i2.y, i3.y),vec4(i0.z, i1.z, i2.z, i3.z),vec4(i0.w, i1.w, i2.w, i3.w));return bone_transform;");a.push("}");a.push("");a.push("void main()");a.push("{");if(d){a.push("ivec4 blend_indices = ivec4(a_blendindices);");if(e){a.push("mat4 skinning_transform = (a_blendweight[0] * get_bone_transform(blend_indices[0]));");a.push("skinning_transform += (a_blendweight[1] * get_bone_transform(blend_indices[1]));");a.push("skinning_transform += (a_blendweight[2] * get_bone_transform(blend_indices[2]));");a.push("skinning_transform += (a_blendweight[3] * get_bone_transform(blend_indices[3]));")}else{a.push("vec2 blend_weight = vec2(a_blendindices.zw)/255.0;");a.push("mat4 skinning_transform = blend_weight[0] * get_bone_transform(blend_indices[0]);");a.push("skinning_transform += blend_weight[1] * get_bone_transform(blend_indices[1]);")}}else{a.push("int bone_index = int((a_position.w * 32767.0) + 0.01);");a.push("mat4 skinning_transform = get_bone_transform(bone_index);")}
a.push("mat4 model_view_matrix = u_view_matrix * u_model_matrix;");a.push("mat4 camera_matrix = u_projection_matrix * model_view_matrix;");a.push("vec4 position_transformed = vec4((a_position.x * u_position_scale.x) + u_position_offset.x,(a_position.y * u_position_scale.y) + u_position_offset.y,(a_position.z * u_position_scale.z) + u_position_offset.z,1.0);");a.push("vec4 position_skinned = vec4((skinning_transform * position_transformed).xyz, 1.0);");a.push("mat3 skinning_rotation_transform = mat3(skinning_transform);");a.push("mat3 model_view_rotation_transform = mat3(model_view_matrix);");a.push("vec3 object_space_normal = vec3(a_normal.xyz);");a.push("vec3 object_space_tangent = vec3(a_tangent.xyz);");a.push("vec3 object_space_binormal = vec3(cross(object_space_normal, object_space_tangent) * a_tangent.w);");a.push("mat3 normal_transform = skinning_rotation_transform;");a.push("v_normal = model_view_rotation_transform * (skinning_rotation_transform * object_space_normal);");a.push("v_tangent = model_view_rotation_transform *  (skinning_rotation_transform * object_space_tangent);");a.push("v_binormal = model_view_rotation_transform *  (skinning_rotation_transform * object_space_binormal);");a.push("vec2 texcoord = vec2((a_texcoord.x * u_texcoord_scale.x) + u_texcoord_offset.x,(a_texcoord.y * u_texcoord_scale.y) + u_texcoord_offset.y);");a.push("v_position = (model_view_matrix * position_skinned).xyz;");a.push("v_texcoord = texcoord;");c&&a.push("v_texcoord2 = ((texcoord * a_texcoord2) * u_detail_transform.xy) + u_detail_transform.zw;");a.push("gl_Position = camera_matrix * position_skinned;");a.push("}");a.push("");return a};Spasm.GearShader.prototype.getVertexShaderInput=function(g,h,e){var i=this.getVertexShaderKey(g,h,e),f=this.vertexShaderInputs,a=f[i];if(!a){var b=this.uniforms,c=this.attributes,d=this.varyings;a=[];a.push(b.projectionMatrix);a.push(b.modelMatrix);a.push(b.viewMatrix);a.push(b.skinningMatrices);a.push(b.positionScale);a.push(b.positionOffset);a.push(b.texcoordScale);a.push(b.texcoordOffset);a.push(c.position);a.push(c.normal);a.push(c.tangent);a.push(c.texcoord);if(e){a.push(b.detailTransform);a.push(c.texcoord2)}
if(g){a.push(c.blendIndices);h&&a.push(c.blendWeights)}
a.push(d.position);a.push(d.normal);a.push(d.binormal);a.push(d.tangent);a.push(d.texcoord);e&&a.push(d.texcoord2);f[i]=a}
return a};Spasm.GearShader.prototype.getFragmentShaderInput=function(e){var f=this.getFragmentShaderKey(e),d=this.fragmentShaderInputs,a=d[f];if(!a){var b=this.uniforms,c=this.varyings;a=[];a.push(b.textureDiffuse);a.push(b.textureNormal);a.push(b.textureGearstack);a.push(b.changeColor);a.push(b.cameraPosition);a.push(b.lightPosition);a.push(c.position);a.push(c.normal);a.push(c.binormal);a.push(c.tangent);a.push(c.texcoord);if(e){a.push(b.textureDyeDiffuse);a.push(b.textureDyeNormal);a.push(b.textureDyeDecal);a.push(c.texcoord2)}
d[f]=a}
return a};Spasm.GearShader.prototype.getFragmentShaderSourceLines=function(c){var g=this.getFragmentShaderKey(c),d=this.getFragmentShaderInput(c),a=[];a.push("// Spasm.GearShader fragment shader");a.push("// "+ g);a.push("");a.push("precision mediump float;");a.push("");for(var e=d.length,b=0;b<e;b++){var f=d[b];a.push(f.declaration)}
a.push("");a.push("#define saturate(value) clamp(value, 0.0, 1.0)");a.push("const float gamma_correction_power = 2.2;");a.push("const float gamma_correction_power_inverse = 1.0/2.2;");a.push("vec4 blend_overlay(vec4 back, vec4 front)");a.push("{");a.push("return front * saturate(back * 4.0) + saturate(back - 0.25);");a.push("}");a.push("");a.push("void main()");a.push("{");a.push("vec4 color_diffuse = pow(texture2D(u_texture_diffuse, v_texcoord), vec4(gamma_correction_power));");a.push("vec4 color_diffuse_texture = color_diffuse;");a.push("vec2 normal_sample_raw = texture2D(u_texture_normal, v_texcoord).xy;");a.push("vec2 normal_sample = normal_sample_raw;");a.push("vec3 tangent_world_space = normalize(v_tangent);");a.push("vec3 binormal_world_space = normalize(v_binormal);");a.push("vec3 normal_world_space = normalize(v_normal);");a.push("normal_sample = normal_sample * 2.0 - 1.0;");if(c){a.push("vec4 color_dye_diffuse_texture = texture2D(u_texture_dye_diffuse, v_texcoord2);");a.push("float dye_alpha = color_dye_diffuse_texture.w;");a.push("float dye_color_normalize = (1.0 - dye_alpha) * 0.5;");a.push("vec4 color_dye_diffuse = pow(vec4(color_dye_diffuse_texture.x * dye_alpha + dye_color_normalize, color_dye_diffuse_texture.y * dye_alpha + dye_color_normalize, color_dye_diffuse_texture.z * dye_alpha + dye_color_normalize, 1.0), vec4(gamma_correction_power));");a.push("color_diffuse = blend_overlay(color_dye_diffuse, color_diffuse);");a.push("vec4 color_dye_normal = texture2D(u_texture_dye_normal, v_texcoord2);");a.push("vec4 color_dye_decal = texture2D(u_texture_dye_decal, v_texcoord2);");a.push("color_dye_normal = color_dye_normal * 2.0 - 1.0;");a.push("normal_sample = normal_sample + color_dye_normal.xy;")}
a.push("float z = sqrt(saturate(1.0 - dot(normal_sample, normal_sample)));");a.push("vec3 normal_tangent_space = vec3(normal_sample.x, normal_sample.y, z);");a.push("vec3 bumpy_normal = (tangent_world_space * normal_tangent_space.x) + (binormal_world_space * normal_tangent_space.y) + (normal_world_space * normal_tangent_space.z);");a.push("vec3 camera_direction = normalize(u_camera_position - v_position);");a.push("float nDotL = saturate(dot(camera_direction, bumpy_normal) * (-1.0 + 2.0 * float(gl_FrontFacing)));");a.push("vec4 color_gearstack = texture2D(u_texture_gearstack, v_texcoord);");a.push("vec3 reflection = (bumpy_normal * (nDotL * 2.00)) - camera_direction;");a.push("float rDotV = max(0.0, dot(reflection, camera_direction));");a.push("vec3 specular = saturate(vec3(0.2,0.2,0.2) * pow(rDotV, color_gearstack.g * 255.0)) * color_gearstack.g;");a.push("vec4 blend_color_uncorrected = mix(color_diffuse, blend_overlay(color_diffuse, u_change_color), color_gearstack.r);");a.push("vec3 blend_color = pow(blend_color_uncorrected.xyz, vec3(gamma_correction_power_inverse));");a.push("vec3 ambient_color = 0.25 * blend_color;");a.push("vec3 diffuse_color = 0.75 * (nDotL * blend_color);");a.push("gl_FragColor = vec4(ambient_color + diffuse_color + specular, 1.0);");a.push("}");a.push("");return a};Spasm.GearShader.prototype.getVertexShaderKey=function(a,b,c){Spasm.assertBoolean(a);Spasm.assertBoolean(b);Spasm.assertBoolean(c);Spasm.assert(b?a:true,"cannot have blend weights without blend indices");var d=JSON.stringify({hasBlendWeights:b,hasBlendIndices:a,hasGearDyeTextures:c});return d};Spasm.GearShader.prototype.getFragmentShaderKey=function(a){Spasm.assertBoolean(a);var b=JSON.stringify({hasGearDyeTextures:a});return b};Spasm.GearShader.prototype.getVertexShader=function(c,d,b){var e=this.getVertexShaderKey(c,d,b),a=this.vertexShaders[e];if(!a){var f=this.gl,g=this.getVertexShaderSourceLines(c,d,b),h=this.getVertexShaderInput(c,d,b);a=new Spasm.Shader(f,f.VERTEX_SHADER,g,h);this.vertexShaders[e]=a}
return a};Spasm.GearShader.prototype.getFragmentShader=function(b){var c=this.getFragmentShaderKey(b),a=this.fragmentShaders[c];if(!a){var d=this.gl,e=this.getFragmentShaderSourceLines(b),f=this.getFragmentShaderInput(b);a=new Spasm.Shader(d,d.FRAGMENT_SHADER,e,f);this.fragmentShaders[c]=a}
return a};Spasm.GearShader.prototype.getShaderProgram=function(c,d,b){Spasm.assertBoolean(c);Spasm.assertBoolean(d);Spasm.assertBoolean(b);Spasm.assert(d?c:true,"cannot have blend weights without blend indices");var k=this.gl,e=""+ d+ c+ b,a=this.shaderPrograms[e];if(!a){var i=this.getVertexShader(c,d,b),g=this.getFragmentShader(b);a=new Spasm.ShaderProgram(k,i,g);a.useProgram();var f=this.uniformDatas;for(var h in f){var j=f[h];a.setUniformData(j)}
this.shaderPrograms[e]=a}
return a};Spasm.GearShader.prototype.setUniformData=function(a){Spasm.assertInstance(a,Spasm.UniformData);var e=a.shaderInput,f=e.name;this.uniformDatas[f]=a;var b=this.shaderPrograms;for(var d in b){var c=b[d];c.useProgram();c.setUniformData(a)}};var Spasm=Spasm||{};Spasm.IndexBuffer=function(c,d,b,a){Spasm.Buffer.call(this,c,d,c.ELEMENT_ARRAY_BUFFER);Spasm.assertInteger(b);Spasm.assertInteger(a);this.indexCount=b;this.elementType=a};Spasm.IndexBuffer.prototype=Object.create(Spasm.Buffer.prototype);var Spasm=Spasm||{};Spasm.Renderable=function(m,a,j,i,r,l,g){Spasm.assertWebGLContext(m);Spasm.assertArrayInstances(a,Spasm.VertexBuffer);Spasm.assertInstance(j,Spasm.IndexBuffer);Spasm.assertArrayInstances(i,Spasm.UniformData);Spasm.assertArrayInstances(l,Spasm.RenderablePart);Spasm.assertInstance(g,Spasm.BoundingVolume);this.gl=m;this.vertexBuffers=a;this.indexBuffer=j;this.uniformDatas=i;this.textures=r;this.parts=l;this.boundingVolume=g;this.gearShaders=null;this.gearDyes=[];for(var e=false,f=false,h=false,n=a.length,b=0;b<n;b++)
for(var p=a[b],k=p.attributes,o=k.length,d=0;d<o;d++){var q=k[d],c=q.shaderValueName;if(c==="a_texcoord2")
h=true;else if(c==="a_blendindices")
e=true;else if(c==="a_blendweight")
f=true}
this.hasTexcoord2=h;this.hasBlendIndices=e;this.hasBlendWeights=f;this.assertValidVertexBuffers();this.assertValidIndexBuffer();this.assertValidParts()};Spasm.Renderable.prototype={};Spasm.Renderable.prototype.bindBuffers=function(){var h=this.gl,c=this.vertexBuffers,d=this.indexBuffer,f=this.textures;d.bindBuffer();for(var i=c.length,a=0;a<i;a++){var k=c[a];k.bindBuffer(h)}
d.bindBuffer(h);for(var e=Object.keys(f),j=e.length,b=0;b<j;b++){var l=e[b],g=f[l];g&&g.bindTexture()}};Spasm.Renderable.prototype.useShaderProgram=function(a){Spasm.assertInstance(a,Spasm.ShaderProgram);var c=this.vertexBuffers,d=this.uniformDatas;Spasm.assertArrayInstances(c,Spasm.VertexBuffer);a.useProgram();a.bindVertexAttributes(c);for(var e=d.length,b=0;b<e;b++){var f=d[b];a.setUniformData(f)}};Spasm.Renderable.prototype.render=function(){var h=this.gearShaders;Spasm.assertInstance(h,Spasm.GearShader);this.bindBuffers();var c=h.getShaderProgram(this.hasBlendIndices,this.hasBlendWeights,this.hasTexcoord2);this.useShaderProgram(c);for(var w=this.gl,j=this.parts,r=this.indexBuffer.elementType,i=this.gearDyes,q=i.length,v=j.length,f=0;f<v;f++){for(var b=j[f],s=b.gearDyeSlot,n=b.usePrimaryColor,e=0;e<q;e++){var a=i[e];if(a.slotTypeIndex===s){a.bindTextures();for(var g=a.uniformDatas,l=g.length,d=0;d<l;d++){var t=g[d];c.setUniformData(t)}
var m=n?a.primaryColorUniformData:a.secondaryColorUniformData;c.setUniformData(m)}}
var k=b.primitiveType,p=b.indexStart,o=b.indexCount,u=p*2;w.drawElements(k,o,r,u)}
c.resetVertexAttributes()};Spasm.Renderable.prototype.assertValidParts=function(){for(var g=this.indexBuffer,b=this.parts,h=g.indexCount,i=b.length,a=0;a<i;a++){var c=b[a],e=c.indexStart,d=c.indexCount,f=e+ d;Spasm.assert(f<=h)}};Spasm.Renderable.prototype.setGearShaders=function(a){Spasm.assertInstance(a,Spasm.GearShader);this.gearShaders=a};Spasm.Renderable.prototype.setGearDyes=function(a){Spasm.assertArrayInstances(a,Spasm.GearDye);this.gearDyes=a};Spasm.Renderable.prototype.assertValidVertexBuffers=function(){var b=this.vertexBuffers,c=b.length,e=b[0].vertexCount;if(c>1)
for(var a=1;a<c;a++){var d=b[a];Spasm.assertEqual(e,d.vertexCount)}};Spasm.Renderable.prototype.assertValidIndexBuffer=function(){for(var b=this.indexBuffer,d=this.vertexBuffers,e=d[0].vertexCount,g=b.indexCount,c=new Uint16Array(b.arrayBuffer),a=0;a<g;a++){var f=c[a];Spasm.assert(f<e)}};var Spasm=Spasm||{};Spasm.RenderablePart=function(g,f,b,e){Spasm.assertInteger(g);Spasm.assertInteger(f);Spasm.assertInteger(b);Spasm.assertInteger(e);this.indexStart=g;this.indexCount=f;this.changeColorIndex=b;this.primitiveType=e;var a=0,c=true,d=false;switch(b){case 0:a=0;break;case 1:a=0;c=false;break;case 2:a=1;break;case 3:a=1;c=false;break;case 4:a=2;break;case 5:a=2;c=false;break;case 6:a=3;d=true;break;case 7:a=3;d=true;break;default:Spasm.assert(false,"unsupported change color index: "+ b)}
this.gearDyeSlot=a;this.usePrimaryColor=c;this.useInvestmentDecal=d};var Spasm=Spasm||{};Spasm.Renderer=function(a){Spasm.assertCanvas(a);this.canvas=a;this.renderables=[];this.features=new Spasm.Features(a);if(this.canRender()){this.gl=this.features.gl;this.initWebGL()}else
this.gl=null};Spasm.Renderer.prototype={constructor:Spasm.Renderer};Spasm.Renderer.prototype.canRender=function(){return this.features.canRender()};Spasm.Renderer.prototype.canAnimate=function(){return this.canRender()};Spasm.Renderer.prototype.initWebGL=function(){var a=this.gl;if(a){Spasm.assertWebGLContext(a,"invalid WebGL context");this.gl=a;a.enable(a.DEPTH_TEST);a.depthFunc(a.LESS);a.disable(a.BLEND);a.disable(a.CULL_FACE);a.clearColor(0,0,0,0);this.clearFlags=a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT;a.clear(this.clearFlags);this.glTextures=[];for(var c=32,b=0;b<c;b++){var d=a["TEXTURE"+ b];this.glTextures.push(d)}}};Spasm.Renderer.prototype.render=function(){if(this.canRender())
for(var e=this.gl,b=this.renderables,c=b.length,a=0;a<c;a++){var d=b[a];d.render(e)}};Spasm.Renderer.prototype.animate=function(){if(this.canAnimate()){var a=this;window.requestAnimationFrame(function(){a.animate()});this.render()}};Spasm.Renderer.prototype.addRenderable=function(a){Spasm.assertInstance(a,Spasm.Renderable);this.renderables.push(a)};Spasm.Renderer.prototype.getDiffusePlateTextureIndex=function(){return 0};Spasm.Renderer.prototype.getNormalPlateTextureIndex=function(){return 1};Spasm.Renderer.prototype.getGearstackPlateTextureIndex=function(){return 2};Spasm.Renderer.prototype.getDiffuseDyeTextureIndex=function(){return 3};Spasm.Renderer.prototype.getNormalDyeTextureIndex=function(){return 4};Spasm.Renderer.prototype.getDecalDyeTextureIndex=function(){return 5};var Spasm=Spasm||{};Spasm.Shader=function(f,e,c,a){Spasm.assertWebGLContext(f);Spasm.assertNumber(e);Spasm.assertArray(c);Spasm.assertArrayInstances(a,Spasm.ShaderInput);var h=c.join("\n");this.gl=f;this.type=e;this.lines=c;this.source=h;this.inputs=a;this.assertInputs();this.uniforms=[];this.attributes=[];this.varyings=[];for(var g=a.length,d=0;d<g;d++){var b=a[d];switch(b.inputType){case Spasm.Shader.InputTypes.uniform:this.uniforms.push(b);break;case Spasm.Shader.InputTypes.attribute:this.attributes.push(b);break;case Spasm.Shader.InputTypes.varying:this.varyings.push(b);break;default:Spasm.assert(false)}}
this.shader=f.createShader(e);Spasm.assertInstance(this.shader,WebGLShader);this.compile()};Spasm.Shader.InputTypes={uniform:"uniform",attribute:"attribute",varying:"varying"};Spasm.Shader.ValueTypes={bool:"bool","int":"int","float":"float",vec2:"vec2",vec3:"vec3",vec4:"vec4",bvec2:"bvec2",bvec3:"bvec3",bvec4:"bvec4",ivec2:"ivec2",ivec3:"ivec3",ivec4:"ivec4",mat2:"mat2",mat3:"mat3",mat4:"mat4",sampler2D:"sampler2D",samplerCube:"samplerCube"};Spasm.Shader.prototype={constructor:Spasm.Shader};Spasm.Shader.prototype.compile=function(){var b=this.gl,c=this.source,a=this.shader;b.shaderSource(a,c);b.compileShader(a);this.assertCompileStatus()};Spasm.Shader.prototype.assertCompileStatus=function(){var a=this.gl,b=this.shader,c=a.getShaderParameter(b,a.COMPILE_STATUS);if(!c){var d=a.getShaderInfoLog(b);throw d;}};Spasm.Shader.prototype.assertInputs=function(){for(var f=this.source,b=this.inputs,d=b.length,a=0;a<d;a++){var g=b[a],c=g.declaration,e=f.indexOf(c);Spasm.assert(e>=0)}};var Spasm=Spasm||{};Spasm.ShaderInput=function(b,c,d,a){a=a||1;Spasm.assertString(b);Spasm.assertString(c);Spasm.assertString(d);Spasm.assertInteger(a);Spasm.assert(a>=1);Spasm.assert(b in Spasm.Shader.InputTypes);Spasm.assert(c in Spasm.Shader.ValueTypes);this.inputType=b;this.name=d;this.valueType=c;this.count=a;this.isArray=this.count>1;this.declaration=this.inputType+" "+ this.valueType+" "+ this.name+(this.isArray?"["+ this.count+"]":"")+";"};Spasm.ShaderInput.prototype={constructor:Spasm.ShaderInput};Spasm.ShaderInput.prototype.equals=function(a){Spasm.assertInstance(a,Spasm.ShaderInput);var b=this.inputType===a.inputType&&this.name===a.name&&this.valueType===a.valueType&&this.count===a.count;Spasm.assertEqual(b,this.declaration===a.declaration);return b};var Spasm=Spasm||{};Spasm.ShaderProgram=function(a,c,b){Spasm.assertWebGLContext(a);Spasm.assertInstance(c,Spasm.Shader);Spasm.assertInstance(b,Spasm.Shader);this.gl=a;this.vertexShader=c;this.fragmentShader=b;this.assertMatchingVaryings();this.program=a.createProgram();Spasm.assertInstance(this.program,WebGLProgram);this.handles={};this.link();this.getHandles()};Spasm.ShaderProgram.prototype={constructor:Spasm.ShaderProgram};Spasm.ShaderProgram.prototype.link=function(){var b=this.gl,a=this.program,d=this.vertexShader,c=this.fragmentShader;b.attachShader(a,d.shader);b.attachShader(a,c.shader);b.linkProgram(a);this.assertLinkStatus();this.assertValidateStatus()};Spasm.ShaderProgram.prototype.assertLinkStatus=function(){var a=this.gl,b=this.program,d=a.getProgramParameter(b,a.LINK_STATUS);if(!d){var c=a.getProgramInfoLog(b);throw c;}};Spasm.ShaderProgram.prototype.assertValidateStatus=function(){var a=this.gl,b=this.program;a.validateProgram(b);var d=a.getProgramParameter(b,a.VALIDATE_STATUS);if(!d){var c=a.getProgramInfoLog(b);throw c;}};Spasm.ShaderProgram.prototype.assertMatchingVaryings=function(){var i=this.vertexShader,h=this.fragmentShader,d=i.varyings,c=h.varyings,b=d.length,e=c.length;Spasm.assertEqual(b,e);for(var a=0;a<b;a++){var g=d[a],f=c[a];Spasm.assert(g.equals(f))}};Spasm.ShaderProgram.prototype.getHandles=function(){for(var h=this.gl,g=this.program,f=this.handles,a=this.vertexShader,n=this.fragmentShader,q=a.uniforms.length,e=0;e<q;e++){var t=a.uniforms[e],m=t.name,j=h.getUniformLocation(g,m);if(j instanceof WebGLUniformLocation)
f[m]=j}
for(var p=a.attributes.length,d=0;d<p;d++){var s=a.attributes[d],l=s.name,b=h.getAttribLocation(g,l);Spasm.assertInteger(b);if(b>=0)
f[l]=b}
for(var o=n.uniforms.length,c=0;c<o;c++){var r=n.uniforms[c],k=r.name,i=h.getUniformLocation(g,k);if(i instanceof WebGLUniformLocation)
f[k]=i}};Spasm.ShaderProgram.prototype.useProgram=function(){var b=this.gl,a=this.program;b.useProgram(a)};Spasm.ShaderProgram.prototype.bindVertexAttributes=function(i){Spasm.assertArrayInstances(i,Spasm.VertexBuffer);var q=this.vertexShader,r=this.handles,d=q.attributes;Spasm.assertArrayInstances(d,Spasm.ShaderInput);for(var k=d.length,n=i.length,f=0;f<n;f++){var j=i[f];j.bindBuffer();var a=j.attributes;Spasm.assertArrayInstances(a,Spasm.VertexBufferAttribute);for(var g=a.slice(),p=a.length,h=0;h<p;h++)
for(var b=a[h],l=b.shaderValueName,m=b.shaderType,c=0;c<k;c++){var e=d[c];if(e.name===l&&e.valueType===m){g=g.splice(g.indexOf(b),1);var o=r[e.name];j.setAttributePointer(o,b);break}}}};Spasm.ShaderProgram.prototype.resetVertexAttributes=function(){for(var i=this.gl,f=this.vertexShader,h=this.handles,b=f.attributes,d=b.length,a=0;a<d;a++){var g=b[a],e=g.name,c=h[e];c>=0&&i.disableVertexAttribArray(c)}};Spasm.ShaderProgram.prototype.setUniformData=function(d){Spasm.assert(d,Spasm.UniformData);var h=this.handles,e=d.shaderInput,b=d.data,g=e.name,f=e.valueType,a=h[g];if(a){var c=this.gl;switch(f){case"mat2":c.uniformMatrix2fv(a,false,b);break;case"mat3":c.uniformMatrix3fv(a,false,b);break;case"mat4":c.uniformMatrix4fv(a,false,b);break;case"vec2":c.uniform2fv(a,b);break;case"vec3":c.uniform3fv(a,b);break;case"vec4":c.uniform4fv(a,b);break;case"float":c.uniform1f(a,b);break;case"sampler2D":c.uniform1i(a,b);break;default:Spasm.assert(false,"invalid or missing uniform value type")}}};var Spasm=Spasm||{};Spasm.UniformData=function(b,a){a=a||null;Spasm.assertInstance(b,Spasm.ShaderInput);this.shaderInput=b;this.data=a};Spasm.UniformData.prototype={};var Spasm=Spasm||{};Spasm.SkeletonShader=function(c){Spasm.assertWebGLContext(c);this.gl=c;var a=Spasm.Shader.InputTypes,b=Spasm.Shader.ValueTypes;this.uniforms={projectionMatrix:new Spasm.ShaderInput(a.uniform,b.mat4,"u_projection_matrix"),modelMatrix:new Spasm.ShaderInput(a.uniform,b.mat4,"u_model_matrix"),viewMatrix:new Spasm.ShaderInput(a.uniform,b.mat4,"u_view_matrix"),vertexColor:new Spasm.ShaderInput(a.uniform,b.vec4,"u_vertex_color"),pointSize:new Spasm.ShaderInput(a.uniform,b.float,"u_point_size")};this.attributes={boneIndex:new Spasm.ShaderInput(a.attribute,b.float,"a_bone_index"),vertexColor:new Spasm.ShaderInput(a.attribute,b.vec4,"a_vertex_color")};this.varyings={vertexColor:new Spasm.ShaderInput(a.varying,b.vec4,"v_vertex_color")};this.vertexShaders={};this.vertexShaderInputs={};this.vertexShaderSources={};this.fragmentShaders={};this.fragmentShaderInputs={};this.fragmentShaderSources={};this.shaderPrograms={}};Spasm.SkeletonShader.prototype={};Spasm.SkeletonShader.prototype.maxBoneCount=72;Spasm.SkeletonShader.prototype.getBoneTransformsUniform=function(a){Spasm.assertInteger(a);Spasm.assert(a>0);Spasm.assert(a<=this.maxBoneCount);var c=Spasm.Shader.InputTypes,d=Spasm.Shader.ValueTypes,b=new Spasm.ShaderInput(c.uniform,d.vec4,"u_bone_transforms",a*3);return b};Spasm.SkeletonShader.prototype.getVertexShaderKey=function(b,a){Spasm.assertInteger(b);Spasm.assertBoolean(a);var c=""+ b+ a;return c};Spasm.SkeletonShader.prototype.getFragmentShaderKey=function(a){Spasm.assertBoolean(a);var b=""+ a;return b};Spasm.SkeletonShader.prototype.getShaderProgramKey=function(b,a){Spasm.assertInteger(b);Spasm.assertBoolean(a);var c=""+ b+ a;return c};Spasm.SkeletonShader.prototype.getVertexShaderInput=function(d,c){Spasm.assertInteger(d);Spasm.assertBoolean(c);var e=this.getVertexShaderKey(d,c),a=this.vertexShaderInputs[e];if(!a){var b=this.uniforms,f=this.attributes,h=this.varyings;a=[];a.push(b.projectionMatrix);a.push(b.modelMatrix);a.push(b.viewMatrix);a.push(b.pointSize);var g=this.getBoneTransformsUniform(d);a.push(g);if(c){a.push(f.vertexColor);a.push(h.vertexColor)}else
a.push(b.vertexColor);a.push(f.boneIndex);this.vertexShaderInputs[e]=a}
return a};Spasm.SkeletonShader.prototype.getVertexShaderSource=function(f,b){Spasm.assertInteger(f);Spasm.assertBoolean(b);var e=this.getVertexShaderKey(f,b),c=this.vertexShaderSources[e];if(!c){var a=[];a.push("// Spasm.SkeletonShader vertex shader");a.push("// key = "+ e);a.push("");a.push("precision mediump float;");a.push("");a.push("// inputs");for(var g=this.getVertexShaderInput(f,b),h=g.length,d=0;d<h;d++){var i=g[d];a.push(i.declaration)}
a.push("");a.push("void main()");a.push("{");a.push("// bone transform");a.push("int bone_index = int(a_bone_index);");a.push("int stride_bone_index = 3 * bone_index;");a.push("mat4 bone_transform = mat4(u_bone_transforms[stride_bone_index + 0],u_bone_transforms[stride_bone_index + 1],u_bone_transforms[stride_bone_index + 2],vec4(0.0, 0.0, 0.0, 1.0));");a.push("vec4 bone_position = vec4(bone_transform[0][3],bone_transform[1][3],bone_transform[2][3],1.0);");a.push("");a.push("// position");a.push("vec4 position = (u_projection_matrix * u_view_matrix * u_model_matrix) * bone_position;");a.push("gl_Position = position;");a.push("");a.push("gl_PointSize = u_point_size;");if(b){a.push("v_vertex_color = a_vertex_color;");a.push("")}
a.push("}");a.push("");c=a.join("\n");this.vertexShaderSources[e]=c}
return c};Spasm.SkeletonShader.prototype.getFragmentShaderInput=function(b){var c=this.getFragmentShaderKey(b),a=this.fragmentShaderInputs[c];if(!a){var d=this.uniforms,e=this.varyings;a=[];if(b)
a.push(e.vertexColor);else
a.push(d.vertexColor);this.fragmentShaderInputs[c]=a}
return a};Spasm.SkeletonShader.prototype.getFragmentShaderSource=function(d){var e=this.getFragmentShaderKey(d),b=this.fragmentShaderSources[e];if(!b){var a=[];a.push("// Spasm.SkeletonShader fragment shader");a.push("// key = "+ e);a.push("");a.push("precision mediump float;");a.push("");a.push("// inputs");for(var f=this.getFragmentShaderInput(d),g=f.length,c=0;c<g;c++){var h=f[c];a.push(h.declaration)}
a.push("");a.push("void main()");a.push("{");if(d)
a.push("gl_FragColor = v_vertex_color;");else
a.push("gl_FragColor = u_vertex_color;");a.push("}");a.push("");b=a.join("\n");this.fragmentShaderSources[e]=b}
return b};Spasm.SkeletonShader.prototype.getFragmentShader=function(b){var c=this.getFragmentShaderKey(b),a=this.fragmentShaders[c];if(!a){var e=this.getFragmentShaderInput(b),f=this.getFragmentShaderSource(b),d=this.gl;a=new Spasm.Shader(d,d.FRAGMENT_SHADER,f,e);this.fragmentShaders[c]=a}
return a};Spasm.SkeletonShader.prototype.getVertexShader=function(c,a){Spasm.assertInteger(c);Spasm.assertBoolean(a);var d=this.getVertexShaderKey(c,a),b=this.vertexShaders[d];if(!b){var g=this.getVertexShaderInput(c,a),f=this.getVertexShaderSource(c,a),e=this.gl;b=new Spasm.Shader(e,e.VERTEX_SHADER,f,g);this.vertexShaders[d]=b}
return b};Spasm.SkeletonShader.prototype.getShaderProgram=function(d,b){var c=this.getShaderProgramKey(d,b),a=this.shaderPrograms[c];if(!a){var f=this.getVertexShader(d,b),e=this.getFragmentShader(b),g=this.gl;a=new Spasm.ShaderProgram(g,f,e);this.shaderPrograms[c]=a}
return a};var Spasm=Spasm||{};Spasm.Texture=function(b,a,c){Spasm.assertWebGLContext(b);Spasm.assertInteger(a);Spasm.assertImage(c);Spasm.assert(a>=0,"texture index is less than 0: "+ a);Spasm.assert(a<32,"texture index is greater or equal to 32: "+ a);this.gl=b;this.index=a;this.image=c;this.glTextureIndex=b["TEXTURE"+ a];Spasm.assertInteger(this.glTextureIndex);this.textureHandle=b.createTexture();this.setTextureImage()};Spasm.Texture.prototype={};Spasm.Texture.prototype.bindTexture=function(){var a=this.gl;a.activeTexture(this.glTextureIndex);a.bindTexture(a.TEXTURE_2D,this.textureHandle)};Spasm.Texture.prototype.setTextureImage=function(){this.bindTexture();var a=this.gl,b=this.image;a.texImage2D(a.TEXTURE_2D,0,a.RGBA,a.RGBA,a.UNSIGNED_BYTE,b);if(b.width===b.height){a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.LINEAR);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR_MIPMAP_NEAREST);a.generateMipmap(a.TEXTURE_2D)}else{a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.LINEAR);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR)}};Spasm.Texture.prototype.setTextureUniform=function(a){Spasm.assertShaderUniform(a);this.bindTexture();var c=this.gl,b=this.index;c.uniform1i(a,b)};var Spasm=Spasm||{};Spasm.VertexBuffer=function(e,c,a,b,d){Spasm.Buffer.call(this,e,c,e.ARRAY_BUFFER);Spasm.assertInteger(a);Spasm.assertInteger(b);Spasm.assertArrayInstances(d,Spasm.VertexBufferAttribute);this.vertexStride=a;this.vertexCount=b;this.attributes=d;Spasm.VertexBuffer.debugAssertValidBuffer(c,b,a);this.debugAssertValidAttributes()};Spasm.VertexBuffer.prototype=Object.create(Spasm.Buffer.prototype);Spasm.VertexBuffer.debugAssertValidBuffer=function(b,c,a){Spasm.assertArrayBuffer(b);Spasm.assertInteger(a);Spasm.assertInteger(c);var e=c*a,d=b.byteLength;Spasm.assertEqual(e,d)};Spasm.VertexBuffer.prototype.debugAssertValidAttributes=function(){var c=this.attributes;Spasm.assertArrayInstances(c,Spasm.VertexBufferAttribute);for(var f=this.vertexStride,a=0,e=c.length,b=0;b<e;b++){var d=c[b],h=d.byteCount,g=d.byteOffset;Spasm.assertEqual(a,g);a+=h}
Spasm.assertEqual(a,f)};Spasm.VertexBuffer.prototype.setAttributePointer=function(b,a){Spasm.assertInteger(b);Spasm.assertInstance(a,Spasm.VertexBufferAttribute);var c=this.gl,d=this.vertexStride,h=a.valueCount,e=a.bufferType,f=a.normalized,g=a.byteOffset;c.enableVertexAttribArray(b);c.vertexAttribPointer(b,h,e,f,d,g)};var Spasm=Spasm||{};Spasm.VertexBufferAttribute=function(e,a,b,f,c,h,d,g){Spasm.assertString(e);Spasm.assertInteger(a);Spasm.assertString(b);Spasm.assertInteger(f);Spasm.assertInteger(c);Spasm.assertBoolean(h);Spasm.assertInteger(d);Spasm.assertInteger(g);this.semantic=e;this.semanticIndex=a;this.shaderType=b;this.bufferType=f;this.valueCount=c;this.normalized=h;this.byteCount=d;this.byteOffset=g;this.valueByteSize=d/c;this.assertValidAttribute();this.shaderValueName="a_"+ e+(a>0?a:"");this.declaration="attribute "+ b+" "+ this.shaderValueName+";"};Spasm.VertexBufferAttribute.prototype={};Spasm.VertexBufferAttribute.prototype.assertValidAttribute=function(){var a=this.semanticIndex,d=this.shaderType,b=this.bufferType,e=this.valueCount,f=this.byteCount,c=this.byteOffset;Spasm.assert(a>=0);Spasm.assert(d in Spasm.Shader.ValueTypes);Spasm.assert(b>=0);Spasm.assert(e>=1);Spasm.assert(f>=1);Spasm.assert(c>=0)};var Spasm=Spasm||{};Spasm.VertexBufferMetadata=function(b,a,c){Spasm.assertInteger(b);Spasm.assertInteger(a);Spasm.assertArrayInstances(c,Spasm.VertexBufferAttribute);this.vertexCount=b;this.vertexStride=a;this.attributes=c;this.assertMatchingAttributes()};Spasm.VertexBufferMetadata.prototype={};Spasm.VertexBufferMetadata.prototype.assertMatchingAttributes=function(){for(var e=this.vertexStride,c=this.attributes,b=0,d=c.length,a=0;a<d;a++){var f=c[a];b+=f.size}
Spasm.assertEqual(b,e)};